
const GB_base64_js = "InVzZSBzdHJpY3QiOwp2YXIgdG9CYXNlNjQgPSBbIkEiLCAiQiIsICJDIiwgIkQiLCAiRSIsICJGIiwgIkciLCAiSCIsICJJIiwgIkoiLCAiSyIsICJMIiwgIk0iLCAiTiIsICJPIiwgIlAiLCAiUSIsICJSIiwgIlMiLCAiVCIsICJVIiwgIlYiLCAiVyIsICJYIiwgIlkiLCAiWiIsCgkiYSIsICJiIiwgImMiLCAiZCIsICJlIiwgImYiLCAiZyIsICJoIiwgImkiLCAiaiIsICJrIiwgImwiLCAibSIsICJuIiwgIm8iLCAicCIsICJxIiwgInIiLCAicyIsICJ0IiwgInUiLCAidiIsICJ3IiwgIngiLCAieSIsICJ6IiwKCSIwIiwgIjEiLCAiMiIsICIzIiwgIjQiLCAiNSIsICI2IiwgIjciLCAiOCIsICI5IiwgIisiICwgIi8iLCAiPSJdOwp2YXIgZnJvbUJhc2U2NCA9ICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPSI7CmZ1bmN0aW9uIGJhc2U2NChkYXRhKSB7Cgl0cnkgewoJCXZhciBiYXNlNjQgPSB3aW5kb3cuYnRvYShkYXRhKTsJLy9Vc2UgdGhpcyBuYXRpdmUgZnVuY3Rpb24gd2hlbiBpdCdzIGF2YWlsYWJsZSwgYXMgaXQncyBhIG1hZ25pdHVkZSBmYXN0ZXIgdGhhbiB0aGUgbm9uLW5hdGl2ZSBjb2RlIGJlbG93LgoJfQoJY2F0Y2ggKGVycm9yKSB7CgkJLy9EZWZhdWx0aW5nIHRvIG5vbi1uYXRpdmUgYmFzZTY0IGVuY29kaW5nLi4uCgkJdmFyIGJhc2U2NCA9ICIiOwoJCXZhciBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGg7CgkJaWYgKGRhdGFMZW5ndGggPiAwKSB7CgkJCXZhciBieXRlcyA9IFswLCAwLCAwXTsKCQkJdmFyIGluZGV4ID0gMDsKCQkJdmFyIHJlbWFpbmRlciA9IGRhdGFMZW5ndGggJSAzOwoJCQl3aGlsZSAoZGF0YS5sZW5ndGggJSAzID4gMCkgewoJCQkJLy9NYWtlIHN1cmUgd2UgZG9uJ3QgZG8gZnV6enkgbWF0aCBpbiB0aGUgbmV4dCBsb29wLi4uCgkJCQlkYXRhW2RhdGEubGVuZ3RoXSA9ICIgIjsKCQkJfQoJCQl3aGlsZSAoaW5kZXggPCBkYXRhTGVuZ3RoKSB7CgkJCQkvL0tlZXAgdGhpcyBsb29wIHNtYWxsIGZvciBzcGVlZC4KCQkJCWJ5dGVzID0gW2RhdGEuY2hhckNvZGVBdChpbmRleCsrKSAmIDB4RkYsIGRhdGEuY2hhckNvZGVBdChpbmRleCsrKSAmIDB4RkYsIGRhdGEuY2hhckNvZGVBdChpbmRleCsrKSAmIDB4RkZdOwoJCQkJYmFzZTY0ICs9IHRvQmFzZTY0W2J5dGVzWzBdID4+IDJdICsgdG9CYXNlNjRbKChieXRlc1swXSAmIDB4MykgPDwgNCkgfCAoYnl0ZXNbMV0gPj4gNCldICsgdG9CYXNlNjRbKChieXRlc1sxXSAmIDB4RikgPDwgMikgfCAoYnl0ZXNbMl0gPj4gNildICsgdG9CYXNlNjRbYnl0ZXNbMl0gJiAweDNGXTsKCQkJfQoJCQlpZiAocmVtYWluZGVyID4gMCkgewoJCQkJLy9GaWxsIGluIHRoZSBwYWRkaW5nIGFuZCByZWNhbHVsYXRlIHRoZSB0cmFpbGluZyBzaXgtYml0IGdyb3VwLi4uCgkJCQliYXNlNjRbYmFzZTY0Lmxlbmd0aCAtIDFdID0gIj0iOwoJCQkJaWYgKHJlbWFpbmRlciA9PSAyKSB7CgkJCQkJYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAyXSA9ICI9IjsKCQkJCQliYXNlNjRbYmFzZTY0Lmxlbmd0aCAtIDNdID0gdG9CYXNlNjRbKGJ5dGVzWzBdICYgMHgzKSA8PCA0XTsKCQkJCX0KCQkJCWVsc2UgewoJCQkJCWJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMl0gPSB0b0Jhc2U2NFsoYnl0ZXNbMV0gJiAweEYpIDw8IDJdOwoJCQkJfQoJCQl9CgkJfQoJfQoJcmV0dXJuIGJhc2U2NDsKfQpmdW5jdGlvbiBiYXNlNjRfZGVjb2RlKGRhdGEpIHsKCXRyeSB7CgkJdmFyIGRlY29kZTY0ID0gd2luZG93LmF0b2IoZGF0YSk7CS8vVXNlIHRoaXMgbmF0aXZlIGZ1bmN0aW9uIHdoZW4gaXQncyBhdmFpbGFibGUsIGFzIGl0J3MgYSBtYWduaXR1ZGUgZmFzdGVyIHRoYW4gdGhlIG5vbi1uYXRpdmUgY29kZSBiZWxvdy4KCX0KCWNhdGNoIChlcnJvcikgewoJCS8vRGVmYXVsdGluZyB0byBub24tbmF0aXZlIGJhc2U2NCBkZWNvZGluZy4uLgoJCXZhciBkZWNvZGU2NCA9ICIiOwoJCXZhciBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGg7CgkJaWYgKGRhdGFMZW5ndGggPiAzICYmIGRhdGFMZW5ndGggJSA0ID09IDApIHsKCQkJdmFyIHNpeGJpdHMgPSBbMCwgMCwgMCwgMF07CS8vRGVjbGFyZSB0aGlzIG91dCBvZiB0aGUgbG9vcCwgdG8gc3BlZWQgdXAgdGhlIG9wcy4KCQkJdmFyIGluZGV4ID0gMDsKCQkJd2hpbGUgKGluZGV4IDwgZGF0YUxlbmd0aCkgewoJCQkJLy9LZWVwIHRoaXMgbG9vcCBzbWFsbCBmb3Igc3BlZWQuCgkJCQlzaXhiaXRzID0gW2Zyb21CYXNlNjQuaW5kZXhPZihkYXRhLmNoYXJBdChpbmRleCsrKSksIGZyb21CYXNlNjQuaW5kZXhPZihkYXRhLmNoYXJBdChpbmRleCsrKSksIGZyb21CYXNlNjQuaW5kZXhPZihkYXRhLmNoYXJBdChpbmRleCsrKSksIGZyb21CYXNlNjQuaW5kZXhPZihkYXRhLmNoYXJBdChpbmRleCsrKSldOwoJCQkJZGVjb2RlNjQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoc2l4Yml0c1swXSA8PCAyKSB8IChzaXhiaXRzWzFdID4+IDQpKSArIFN0cmluZy5mcm9tQ2hhckNvZGUoKChzaXhiaXRzWzFdICYgMHgwRikgPDwgNCkgfCAoc2l4Yml0c1syXSA+PiAyKSkgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoc2l4Yml0c1syXSAmIDB4MDMpIDw8IDYpIHwgc2l4Yml0c1szXSk7CgkJCX0KCQkJLy9DaGVjayBmb3IgdGhlICc9JyBjaGFyYWN0ZXIgYWZ0ZXIgdGhlIGxvb3AsIHNvIHdlIGRvbid0IGhvc2UgaXQgdXAuCgkJCWlmIChzaXhiaXRzWzNdID49IDB4NDApIHsKCQkJCWRlY29kZTY0Lmxlbmd0aCAtPSAxOwoJCQkJaWYgKHNpeGJpdHNbMl0gPj0gMHg0MCkgewoJCQkJCWRlY29kZTY0Lmxlbmd0aCAtPSAxOwoJCQkJfQoJCQl9CgkJfQoJfQoJcmV0dXJuIGRlY29kZTY0Owp9CmZ1bmN0aW9uIHRvX2xpdHRsZV9lbmRpYW5fZHdvcmQoc3RyKSB7CglyZXR1cm4gdG9fbGl0dGxlX2VuZGlhbl93b3JkKHN0cikgKyB0b19saXR0bGVfZW5kaWFuX3dvcmQoc3RyID4+IDE2KTsKfQpmdW5jdGlvbiB0b19saXR0bGVfZW5kaWFuX3dvcmQoc3RyKSB7CglyZXR1cm4gdG9fYnl0ZShzdHIpICsgdG9fYnl0ZShzdHIgPj4gOCk7Cn0KZnVuY3Rpb24gdG9fYnl0ZShzdHIpIHsKCXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHN0ciAmIDB4RkYpOwp9CmZ1bmN0aW9uIGFycmF5VG9CYXNlNjQoYXJyYXlJbikgewoJdmFyIGJpblN0cmluZyA9ICIiOwoJdmFyIGxlbmd0aCA9IGFycmF5SW4ubGVuZ3RoOwoJZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgKytpbmRleCkgewoJCWlmICh0eXBlb2YgYXJyYXlJbltpbmRleF0gPT0gIm51bWJlciIpIHsKCQkJYmluU3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYXJyYXlJbltpbmRleF0pOwoJCX0KCX0KCXJldHVybiBiYXNlNjQoYmluU3RyaW5nKTsKfQpmdW5jdGlvbiBiYXNlNjRUb0FycmF5KGI2NFN0cmluZykgewoJdmFyIGJpblN0cmluZyA9IGJhc2U2NF9kZWNvZGUoYjY0U3RyaW5nKTsKCXZhciBvdXRBcnJheSA9IFtdOwoJdmFyIGxlbmd0aCA9IGJpblN0cmluZy5sZW5ndGg7Cglmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOykgewoJCW91dEFycmF5LnB1c2goYmluU3RyaW5nLmNoYXJDb2RlQXQoaW5kZXgrKykgJiAweEZGKTsKCX0KCXJldHVybiBvdXRBcnJheTsKfQ==";
const GB_controls_js ="";
const GB_GameBoyCore_js = "";
const GB_GameBoyIO_js = "";
const GB_index_html = "PCFET0NUWVBFIGh0bWw+CjwhLS0gRWRpdGVkIGZyb20gR0IgU3R1ZGlvIGh0bWwgb3B0aW9uLCB0aG91Z2ggdGhpcyBpcyAocHJvYmFibHkpIG5vdCBhIEdCU3R1ZGlvIGdhbWUgLS0+CjxodG1sPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KICAgIAogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuL3N0eWxlLmNzcyI+CiAgICA8dGl0bGU+R0IgRW11bGF0b3I8L3RpdGxlPiAgICAKICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+IGJvZHkgeyBiYWNrZ3JvdW5kLWNvbG9yOiN1bmRlZmluZWQ7IH08L3N0eWxlPgogICAgCiAgPC9oZWFkPgogIDxib2R5PgogICAgPGRpdiBpZD0iZ2FtZWJveV9zaGVsbCI+CiAgICAgIDxkaXYgaWQ9ImdhbWUiPgogICAgICAgIDxjYW52YXMgaWQ9Im1haW5DYW52YXMiIHdpZHRoPSIxNjAiIGhlaWdodD0iMTQ0IiBzdHlsZT0iaGVpZ2h0OiA1NzhweDsgd2lkdGg6IGF1dG87Ij5ObyBDYW52YXMgU3VwcG9ydDwvY2FudmFzPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0iY29udHJvbGxlciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICA8ZGl2IGlkPSJjb250cm9sbGVyX2RwYWQiPgogICAgICAgICAgPGRpdiBpZD0iY29udHJvbGxlcl9sZWZ0Ij48L2Rpdj4KICAgICAgICAgIDxkaXYgaWQ9ImNvbnRyb2xsZXJfcmlnaHQiPjwvZGl2PgogICAgICAgICAgPGRpdiBpZD0iY29udHJvbGxlcl91cCI+PC9kaXY+CiAgICAgICAgICA8ZGl2IGlkPSJjb250cm9sbGVyX2Rvd24iPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9ImNvbnRyb2xsZXJfc2VsZWN0IiBjbGFzcz0iY2Fwc3VsZUJ0biI+U2VsZWN0PC9kaXY+CiAgICAgICAgPGRpdiBpZD0iY29udHJvbGxlcl9zdGFydCIgY2xhc3M9ImNhcHN1bGVCdG4iPlN0YXJ0PC9kaXY+CiAgICAgICAgPGRpdiBpZD0iY29udHJvbGxlcl9iIiBjbGFzcz0icm91bmRCdG4iPkI8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJjb250cm9sbGVyX2EiIGNsYXNzPSJyb3VuZEJ0biI+QTwvZGl2PgogICAgICA8L2Rpdj4gICAgICAKICAgIDwvZGl2PgogICAgPHNjcmlwdD4KICAgICAgY29uc3QgY3VzdG9tQ29udHJvbHMgPSB7ImEiOlsieiIsIloiLCJrIiwiSyJdLCJiIjpbIngiLCJYIiwiaiIsIkoiXSwgInN0YXJ0IjpbIkVudGVyIiwibSIsIk0iXSwgInNlbGVjdCI6WyJTaGlmdCIsIm4iLCJOIl19OwogICAgPC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iLi9tb2JpbGUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4vYmFzZTY0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuL3N3Zm9iamVjdC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iLi9yZXNhbXBsZXIuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4vWEF1ZGlvU2VydmVyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuL2NvbnRyb2xzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuL3Jlc2l6ZS5qcyI+PC9zY3JpcHQ+ICAgIAogICAgPHNjcmlwdCBzcmM9Ii4vR2FtZUJveUNvcmUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4vR2FtZUJveUlPLmpzIj48L3NjcmlwdD4KICAKCjwvYm9keT48L2h0bWw+";
const GB_mobile_js = "dmFyIHJvbVBhdGggPSAicm9tL2dhbWUuZ2IiOwp2YXIgbWFpbkNhbnZhcyA9IG51bGw7CnZhciBzb3VuZFJlYWR5ID0gZmFsc2U7Cgp2YXIgY291dCA9IGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7CmZ1bmN0aW9uIHN0YXJ0R2FtZShibG9iKSB7CiAgdmFyIGJpbmFyeUhhbmRsZSA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgYmluYXJ5SGFuZGxlLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gMikgewogICAgICB0cnkgewogICAgICAgIHN0YXJ0KG1haW5DYW52YXMsIHRoaXMucmVzdWx0KTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGFsZXJ0KGUubWVzc2FnZSk7CiAgICAgIH0KICAgIH0KICB9OwogIGJpbmFyeUhhbmRsZS5yZWFkQXNCaW5hcnlTdHJpbmcoYmxvYik7Cn0KCmdhbWVfNjQgPSJAKHJvbV9iNjQpIjsKCmZ1bmN0aW9uIGxvYWRWaWFYSFIoKSB7ICAKICBidWZmPVVpbnQ4QXJyYXkuZnJvbShhdG9iKGdhbWVfNjQpLCBjID0+IGMuY2hhckNvZGVBdCgwKSkuYnVmZmVyOwogIHN0YXJ0R2FtZShuZXcgQmxvYihbYnVmZl0sIHsgdHlwZTogInRleHQvcGxhaW4iIH0pKTsKfQoKZnVuY3Rpb24gd2luZG93aW5nSW5pdGlhbGl6ZSgpIHsKICBjb3V0KCJ3aW5kb3dpbmdJbml0aWFsaXplKCkgY2FsbGVkLiIsIDApOwogIG1haW5DYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFpbkNhbnZhcyIpOwogIHdpbmRvdy5vbnVubG9hZCA9IGF1dG9TYXZlOwogIGxvYWRWaWFYSFIoKTsKfQoKLy9XcmFwcGVyIGZvciBsb2NhbFN0b3JhZ2UgZ2V0SXRlbSwgc28gdGhhdCBkYXRhIGNhbiBiZSByZXRyaWV2ZWQgaW4gdmFyaW91cyB0eXBlcy4KZnVuY3Rpb24gZmluZFZhbHVlKGtleSkgewogIHRyeSB7CiAgICBpZiAod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkgIT0gbnVsbCkgewogICAgICByZXR1cm4gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSk7CiAgICB9CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vQW4gb2xkZXIgR2Vja28gMS44LjEvMS45LjAgbWV0aG9kIG9mIHN0b3JhZ2UgKERlcHJlY2F0ZWQgZHVlIHRvIHRoZSBvYnZpb3VzIHNlY3VyaXR5IGhvbGUpOgogICAgaWYgKHdpbmRvdy5nbG9iYWxTdG9yYWdlW2xvY2F0aW9uLmhvc3RuYW1lXS5nZXRJdGVtKGtleSkgIT0gbnVsbCkgewogICAgICByZXR1cm4gSlNPTi5wYXJzZSh3aW5kb3cuZ2xvYmFsU3RvcmFnZVtsb2NhdGlvbi5ob3N0bmFtZV0uZ2V0SXRlbShrZXkpKTsKICAgIH0KICB9CiAgcmV0dXJuIG51bGw7Cn0KLy9XcmFwcGVyIGZvciBsb2NhbFN0b3JhZ2Ugc2V0SXRlbSwgc28gdGhhdCBkYXRhIGNhbiBiZSBzZXQgaW4gdmFyaW91cyB0eXBlcy4KZnVuY3Rpb24gc2V0VmFsdWUoa2V5LCB2YWx1ZSkgewogIHRyeSB7CiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeSh2YWx1ZSkpOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAvL0FuIG9sZGVyIEdlY2tvIDEuOC4xLzEuOS4wIG1ldGhvZCBvZiBzdG9yYWdlIChEZXByZWNhdGVkIGR1ZSB0byB0aGUgb2J2aW91cyBzZWN1cml0eSBob2xlKToKICAgIHdpbmRvdy5nbG9iYWxTdG9yYWdlW2xvY2F0aW9uLmhvc3RuYW1lXS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTsKICB9Cn0KLy9XcmFwcGVyIGZvciBsb2NhbFN0b3JhZ2UgcmVtb3ZlSXRlbSwgc28gdGhhdCBkYXRhIGNhbiBiZSBzZXQgaW4gdmFyaW91cyB0eXBlcy4KZnVuY3Rpb24gZGVsZXRlVmFsdWUoa2V5KSB7CiAgdHJ5IHsKICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAvL0FuIG9sZGVyIEdlY2tvIDEuOC4xLzEuOS4wIG1ldGhvZCBvZiBzdG9yYWdlIChEZXByZWNhdGVkIGR1ZSB0byB0aGUgb2J2aW91cyBzZWN1cml0eSBob2xlKToKICAgIHdpbmRvdy5nbG9iYWxTdG9yYWdlW2xvY2F0aW9uLmhvc3RuYW1lXS5yZW1vdmVJdGVtKGtleSk7CiAgfQp9CgovLyBBbGxvdyBBdWRpbyBjb250ZXh0IHRvIGJlIGNyZWF0ZWQgaW4gcGxhY2VzIHdoaWNoIHJlcXVpcmUKLy8gdXNlciBpbnB1dCBmaXJzdC4gSG9vayB0aGlzIHVwIHRvIGtleWJvYXJkIGFuZCB0b3VjaCBpbnB1dHMKZnVuY3Rpb24gaW5pdFNvdW5kKCkgewogIGlmICghc291bmRSZWFkeSAmJiAhc2V0dGluZ3NbMF0gJiYgR2FtZUJveUVtdWxhdG9ySW5pdGlhbGl6ZWQoKSkgewogICAgd2luZG93LkF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDsKICAgIHdpbmRvdy5hdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KCk7CiAgICBpZiAod2luZG93LmF1ZGlvQ29udGV4dCkgewogICAgICAvLyBDcmVhdGUgZW1wdHkgYnVmZmVyCiAgICAgIHZhciBidWZmZXIgPSB3aW5kb3cuYXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlcigxLCAxLCAyMjA1MCk7CiAgICAgIHZhciBzb3VyY2UgPSB3aW5kb3cuYXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpOwogICAgICBzb3VyY2UuYnVmZmVyID0gYnVmZmVyOwogICAgICAvLyBDb25uZWN0IHRvIG91dHB1dCAoc3BlYWtlcnMpCiAgICAgIHNvdXJjZS5jb25uZWN0KHdpbmRvdy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pOwogICAgICAvLyBQbGF5IHNvdW5kCiAgICAgIGlmIChzb3VyY2Uuc3RhcnQpIHsKICAgICAgICBzb3VyY2Uuc3RhcnQoMCk7CiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnBsYXkpIHsKICAgICAgICBzb3VyY2UucGxheSgwKTsKICAgICAgfSBlbHNlIGlmIChzb3VyY2Uubm90ZU9uKSB7CiAgICAgICAgc291cmNlLm5vdGVPbigwKTsKICAgICAgfQogICAgICB3aW5kb3cuYXVkaW9Db250ZXh0LnJlc3VtZSgpLnRoZW4oKCkgPT4gewogICAgICAgIHNldHRpbmdzWzBdID0gdHJ1ZTsKICAgICAgICBnYW1lYm95LmluaXRTb3VuZCgpOwogICAgICAgIHNvdW5kUmVhZHkgPSB0cnVlOwogICAgICB9KTsKICAgIH0KICB9Cn0KCnZhciBzb3VuZEluaXRUaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogIGlmIChHYW1lQm95RW11bGF0b3JJbml0aWFsaXplZCgpKSB7CiAgICBpbml0U291bmQoKTsKICAgIGNsZWFyVGltZW91dChzb3VuZEluaXRUaW1lcik7CiAgfQp9LCAxNik7Cgp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsIHdpbmRvd2luZ0luaXRpYWxpemUpOwo=";
const GB_resampler_js = "";
const GB_resize_js = "ZnVuY3Rpb24gYmluZFJlc2l6ZSgpIHsNCiAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYWluQ2FudmFzIik7DQogIHZhciBnYW1lUmF0aW8gPSAxNjAgLyAxNDQ7DQoNCiAgZnVuY3Rpb24gb25SZXNpemUoKSB7DQogICAgdmFyIHdpbmRvd1JhdGlvID0gd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQ7DQogICAgaWYgKHdpbmRvd1JhdGlvIDwgZ2FtZVJhdGlvKSB7DQogICAgICBjYW52YXMuc3R5bGUud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCArICJweCI7DQogICAgICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gImF1dG8iOw0KICAgIH0gZWxzZSB7DQogICAgICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICsgInB4IjsNCiAgICAgIGNhbnZhcy5zdHlsZS53aWR0aCA9ICJhdXRvIjsNCiAgICB9DQogIH0NCg0KICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgb25SZXNpemUpOw0KICBvblJlc2l6ZSgpOw0KfQ0KDQpiaW5kUmVzaXplKCk7DQo=";
const GB_style_css = "Ym9keSB7CiAgYmFja2dyb3VuZDogIzAzMTkyMTsKICBjb2xvcjogI2ZmZjsKICBmb250LWZhbWlseTogIkhlbHZldGljYU5ldWUtTGlnaHQiLCAiSGVsdmV0aWNhIE5ldWUgTGlnaHQiLCAiSGVsdmV0aWNhIE5ldWUiLAogICAgSGVsdmV0aWNhLCBBcmlhbCwgIkx1Y2lkYSBHcmFuZGUiLCBzYW5zLXNlcmlmOwogIGZvbnQtd2VpZ2h0OiAzMDA7CiAgbWFyZ2luOiAwcHg7CiAgcGFkZGluZzogMHB4OwogIHRvdWNoLWFjdGlvbjogbm9uZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lOwogIHVzZXItc2VsZWN0OiBub25lOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCiNnYW1lIHsKICB3aWR0aDogMTAwJTsKICB0b3VjaC1hY3Rpb246IG5vbmU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgojZ2FtZSBjYW52YXMgewogIGltYWdlLXJlbmRlcmluZzogLW1vei1jcmlzcC1lZGdlczsKICBpbWFnZS1yZW5kZXJpbmc6IC13ZWJraXQtY3Jpc3AtZWRnZXM7CiAgaW1hZ2UtcmVuZGVyaW5nOiBwaXhlbGF0ZWQ7CiAgaW1hZ2UtcmVuZGVyaW5nOiBjcmlzcC1lZGdlczsKfQoKI2NvbnRyb2xsZXIgewogIGRpc3BsYXk6IG5vbmU7CiAgcG9zaXRpb246IGZpeGVkOwogIGJvdHRvbTogMHB4OwogIGhlaWdodDogMjEwcHg7CiAgd2lkdGg6IDEwMCU7CiAgdG91Y2gtYWN0aW9uOiBub25lOwogIG9wYWNpdHk6IDAuODsKfQoKI2NvbnRyb2xsZXJfZHBhZCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMjBweDsKICBsZWZ0OiAwcHg7CiAgd2lkdGg6IDE4NHB4OwogIGhlaWdodDogMTg0cHg7Cn0KCiNjb250cm9sbGVyX2RwYWQ6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogNDhweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYmFja2dyb3VuZDogIzVjNWM1YzsKICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoCiAgICBlbGxpcHNlIGF0IGNlbnRlciwKICAgICM1YzVjNWMgMCUsCiAgICAjNTU1IDU5JSwKICAgICM1YzVjNWMgNjAlCiAgKTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogNjhweDsKICB0b3A6IDY4cHg7Cn0KCiNjb250cm9sbGVyX2xlZnQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAyMHB4OwogIHRvcDogNjhweDsKICB3aWR0aDogNDhweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYmFja2dyb3VuZDogIzY2NjsKICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCBjZW50ZXIsICM2NjYgMCUsICM1YzVjNWMgODAlKTsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4Owp9CgojY29udHJvbGxlcl9yaWdodCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDExNnB4OwogIHRvcDogNjhweDsKICB3aWR0aDogNDhweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYmFja2dyb3VuZDogIzY2NjsKICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCBjZW50ZXIsICM2NjYgMCUsICM1YzVjNWMgODAlKTsKICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwogIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7Cn0KCiNjb250cm9sbGVyX3VwIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogNjhweDsKICB0b3A6IDIwcHg7CiAgd2lkdGg6IDQ4cHg7CiAgaGVpZ2h0OiA0OHB4OwogIGJhY2tncm91bmQ6ICM2NjY7CiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgY2VudGVyLCAjNjY2IDAlLCAjNWM1YzVjIDgwJSk7CiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OwogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7Cn0KCiNjb250cm9sbGVyX2Rvd24gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA2OHB4OwogIHRvcDogMTE2cHg7CiAgd2lkdGg6IDQ4cHg7CiAgaGVpZ2h0OiA0OHB4OwogIGJhY2tncm91bmQ6ICM2NjY7CiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgY2VudGVyLCAjNjY2IDAlLCAjNWM1YzVjIDgwJSk7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4OwogIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7Cn0KCiNjb250cm9sbGVyX2EgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDExMHB4OwogIHJpZ2h0OiAyMHB4Owp9CgojY29udHJvbGxlcl9iIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiA4MHB4OwogIHJpZ2h0OiAxMDBweDsKfQoKLnJvdW5kQnRuIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgZm9udC1zaXplOiAzMnB4OwogIGNvbG9yOiAjNDQwZjFmOwogIGxpbmUtaGVpZ2h0OiA2NHB4OwogIHdpZHRoOiA2NHB4OwogIGhlaWdodDogNjRweDsKICBib3JkZXItcmFkaXVzOiA2NHB4OwogIGJhY2tncm91bmQ6ICM4NzBhNGM7CiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgY2VudGVyLCAjYWIxNDY1IDAlLCAjOGIxZTU3IDEwMCUpOwogIGJveC1zaGFkb3c6IDBweCA0cHggNXB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKfQoKLmNhcHN1bGVCdG4gewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGZvbnQtc2l6ZTogMTBweDsKICBjb2xvcjogIzExMTsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICB3aWR0aDogNjRweDsKICBoZWlnaHQ6IDMycHg7CiAgYm9yZGVyLXJhZGl1czogNDBweDsKICBiYWNrZ3JvdW5kOiAjMjIyOwogIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGNlbnRlciwgIzY2NiAwJSwgIzU1NSAxMDAlKTsKICBib3gtc2hhZG93OiAwcHggNHB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMik7Cn0KCiNjb250cm9sbGVyX3N0YXJ0IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAyMHB4OwogIHJpZ2h0OiAxNXB4Owp9CgojY29udHJvbGxlcl9zZWxlY3QgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDIwcHg7CiAgcmlnaHQ6IDEwMHB4Owp9CgouYnRuUHJlc3NlZCB7CiAgb3BhY2l0eTogMC41Owp9Cgouc3Bpbm5lciB7CiAgaGVpZ2h0OiA1MHB4OwogIHdpZHRoOiA1MHB4OwogIG1hcmdpbjogMHB4IGF1dG87CiAgLXdlYmtpdC1hbmltYXRpb246IHJvdGF0aW9uIDAuOHMgbGluZWFyIGluZmluaXRlOwogIC1tb3otYW5pbWF0aW9uOiByb3RhdGlvbiAwLjhzIGxpbmVhciBpbmZpbml0ZTsKICAtby1hbmltYXRpb246IHJvdGF0aW9uIDAuOHMgbGluZWFyIGluZmluaXRlOwogIGFuaW1hdGlvbjogcm90YXRpb24gMC44cyBsaW5lYXIgaW5maW5pdGU7CiAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgIzMwNjg1MDsKICBib3JkZXItcmlnaHQ6IDEwcHggc29saWQgIzMwNjg1MDsKICBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkICMzMDY4NTA7CiAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjODhjMDcwOwogIGJvcmRlci1yYWRpdXM6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAzMTkyMTsKfQpALXdlYmtpdC1rZXlmcmFtZXMgcm90YXRpb24gewogIGZyb20gewogICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsKICB9CiAgdG8gewogICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQpALW1vei1rZXlmcmFtZXMgcm90YXRpb24gewogIGZyb20gewogICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsKICB9CiAgdG8gewogICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQpALW8ta2V5ZnJhbWVzIHJvdGF0aW9uIHsKICBmcm9tIHsKICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOwogIH0KICB0byB7CiAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQpAa2V5ZnJhbWVzIHJvdGF0aW9uIHsKICBmcm9tIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOwogIH0KICB0byB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NDBweCkgewogICNnYW1lIGNhbnZhcyB7CiAgICBtYXJnaW4tdG9wOiAwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIG1heC13aWR0aDogNDgwcHg7CiAgICBib3JkZXI6IDBweDsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICB9Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDgxMnB4KSBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkgewogIGJvZHkgewogICAgbWFyZ2luOiAwOwogIH0KCiAgI2dhbWUgewogICAgd2lkdGg6IDEwMCU7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB0b3VjaC1hY3Rpb246IG5vbmU7CiAgfQoKICAjZ2FtZSBjYW52YXMgewogICAgbWFyZ2luOiAwOwogICAgZGlzcGxheTogYmxvY2s7CiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7CiAgfQp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHsKICAjY29udHJvbGxlcl9kcGFkIHsKICAgIGxlZnQ6IC01cHg7CiAgICBib3R0b206IC01cHg7CiAgfQoKICAjY29udHJvbGxlcl9hIHsKICAgIHJpZ2h0OiA1cHg7CiAgICBib3R0b206IDk1cHg7CiAgfQoKICAjY29udHJvbGxlcl9iIHsKICAgIHJpZ2h0OiA4MHB4OwogIH0KCiAgI2NvbnRyb2xsZXJfc3RhcnQgewogICAgcmlnaHQ6IDVweDsKICB9CgogICNjb250cm9sbGVyX3NlbGVjdCB7CiAgICByaWdodDogODBweDsKICB9Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIGFuZCAobWF4LWhlaWdodDogNDAwcHgpIHsKICAjY29udHJvbGxlciB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KfQoKLyogU21hbGwgZGV2aWNlcyBpbiBsYW5kc2NhcGUgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LWRldmljZS13aWR0aDogMzAwcHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgewogIGh0bWwsCiAgYm9keSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgfQogIGJvZHkgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICB9CgogICNnYW1lOmFmdGVyIHsKICAgIGNvbnRlbnQ6ICJQTEVBU0UgUk9UQVRFIOKGuyI7CiAgICBmb250LXNpemU6IDI0cHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGNvbG9yOiAjZmZmOwogIH0KCiAgI2dhbWUgY2FudmFzIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICBtYXgtd2lkdGg6IDQ4MHB4OwogIH0KCiAgI2NvbnRyb2xsZXIgewogICAgZGlzcGxheTogbm9uZTsKICB9Cn0KCi8qIERldmljZXMgbGFyZ2UgZW5vdWdoIGZvciBsYW5kc2NhcGUgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMDBweCkgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7CiAgI2NvbnRyb2xsZXIgewogICAgYm90dG9tOiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNTAlKTsKICAgIG9wYWNpdHk6IDAuNTsKICB9Cn0KCg==";
const GB_swf_object_js = "";
const GB_XAudioServer_js = "";


function create_zip_GB(filename, content) {
	var zip = new JSZip();
	zip.file("base64.js",atob(GB_base64_js));
	zip.file("controls.js",atob(GB_controls_js));
	zip.file("GameBoyCore.js",atob(GB_GameBoyCore_js));
	zip.file("GameBoyIO.js",atob(GB_GameBoyIO_js));
	zip.file("index.html",atob(GB_index_html));
	zip.file("resampler.js",atob(GB_resampler_js));
	zip.file("style.css",atob(GB_style_css));
	zip.file("swf_object.js",atob(GB_swf_object_js));
	zip.file("XAudioServer.js",atob(GB_XAudioServer_js));
	
	var mobile_js = atob(GB_mobile_js);
	mobile_js = mobile_js.replace("@(rom_b64)", btoa(content));
	console.log(mobile_js);
	zip.file("mobile.js",mobile_js);
    
    zip.generateAsync({
        type: "base64"
    }).then(function(content) {
		var link = document.createElement('a');
		if (typeof link.download === 'string') {
			document.body.appendChild(link); // Firefox requires the link to be in the body
			link.download = filename+".zip";
			link.href = "data:application/zip;base64," + content;
			link.click();
			document.body.removeChild(link); // remove the link when done
		} else {
			location.replace("data:application/zip;base64," + content);
		}        
    });     
}

//create_zip_GB("hahaha","something");

//console.log(atob(base64_js));

const GBA_js_arm_js = "";

const GBA_js_audio_js = "";

const GBA_js_core_js = "";

const GBA_js_gba_js = "";

const GBA_js_gpio_js = "ZnVuY3Rpb24gR2FtZUJveUFkdmFuY2VHUElPKGNvcmUsIHJvbSkgewoJdGhpcy5jb3JlID0gY29yZTsKCXRoaXMucm9tID0gcm9tOwoKCXRoaXMucmVhZFdyaXRlID0gMDsKCXRoaXMuZGlyZWN0aW9uID0gMDsKCgl0aGlzLmRldmljZSA9IG5ldyBHYW1lQm95QWR2YW5jZVJUQyh0aGlzKTsgLy8gVE9ETzogU3VwcG9ydCBtb3JlIGRldmljZXMKfTsKCkdhbWVCb3lBZHZhbmNlR1BJTy5wcm90b3R5cGUuc3RvcmUxNiA9IGZ1bmN0aW9uKG9mZnNldCwgdmFsdWUpIHsKCXN3aXRjaCAob2Zmc2V0KSB7CgljYXNlIDB4QzQ6CgkJdGhpcy5kZXZpY2Uuc2V0UGlucyh2YWx1ZSAmIDB4Rik7CgkJYnJlYWs7CgljYXNlIDB4QzY6CgkJdGhpcy5kaXJlY3Rpb24gPSB2YWx1ZSAmIDB4RjsKCQl0aGlzLmRldmljZS5zZXREaXJlY3Rpb24odGhpcy5kaXJlY3Rpb24pOwoJCWJyZWFrOwoJY2FzZSAweEM4OgoJCXRoaXMucmVhZFdyaXRlID0gdmFsdWUgJiAxOwoJCWJyZWFrOwoJZGVmYXVsdDoKCQl0aHJvdyBuZXcgRXJyb3IoJ0JVRzogQmFkIG9mZnNldCBwYXNzZWQgdG8gR1BJTzogJyArIG9mZnNldC50b1N0cmluZygxNikpOwoJfQoJaWYgKHRoaXMucmVhZFdyaXRlKSB7CgkJdmFyIG9sZCA9IHRoaXMucm9tLnZpZXcuZ2V0VWludDE2KG9mZnNldCwgdHJ1ZSk7CgkJb2xkICY9IH50aGlzLmRpcmVjdGlvbjsKCQl0aGlzLnJvbS52aWV3LnNldFVpbnQxNihvZmZzZXQsIG9sZCB8ICh2YWx1ZSAmIHRoaXMuZGlyZWN0aW9uKSwgdHJ1ZSk7Cgl9Cn07CgpHYW1lQm95QWR2YW5jZUdQSU8ucHJvdG90eXBlLm91dHB1dFBpbnMgPSBmdW5jdGlvbihueWJibGUpIHsKCWlmICh0aGlzLnJlYWRXcml0ZSkgewoJCXZhciBvbGQgPSB0aGlzLnJvbS52aWV3LmdldFVpbnQxNigweEM0LCB0cnVlKTsKCQlvbGQgJj0gdGhpcy5kaXJlY3Rpb247CgkJdGhpcy5yb20udmlldy5zZXRVaW50MTYoMHhDNCwgb2xkIHwgKG55YmJsZSAmIH50aGlzLmRpcmVjdGlvbiAmIDB4RiksIHRydWUpOwoJfQp9OwoKZnVuY3Rpb24gR2FtZUJveUFkdmFuY2VSVEMoZ3BpbykgewoJdGhpcy5ncGlvID0gZ3BpbzsKCgkvLyBQSU5PVVQ6IFNDSyB8IFNJTyB8IENTIHwgLQoJdGhpcy5waW5zID0gMDsKCXRoaXMuZGlyZWN0aW9uID0gMDsKCgl0aGlzLnRvdGFsQnl0ZXMgPSBbCgkJMCwgLy8gRm9yY2UgcmVzZXQKCQkwLCAvLyBFbXB0eQoJCTcsIC8vIERhdGUvVGltZQoJCTAsIC8vIEZvcmNlIElSUQoJCTEsIC8vIENvbnRyb2wgcmVnaXN0ZXIKCQkwLCAvLyBFbXB0eQoJCTMsIC8vIFRpbWUKCQkwIC8vIEVtcHR5CgldOwoJdGhpcy5ieXRlc1JlbWFpbmluZyA9IDA7CgoJLy8gVHJhbnNmZXIgc2VxdWVuY2U6CgkvLyA9PSBJbml0aWF0ZQoJLy8gPiBISSB8IC0gfCBMTyB8IC0KCS8vID4gSEkgfCAtIHwgSEkgfCAtCgkvLyA9PSBUcmFuc2ZlciBiaXQgKHg4KQoJLy8gPiBMTyB8IHggfCBISSB8IC0KCS8vID4gSEkgfCAtIHwgSEkgfCAtCgkvLyA8ID8/IHwgeCB8ID8/IHwgLQoJLy8gPT0gVGVybWluYXRlCgkvLyA+ICAtIHwgLSB8IExPIHwgLQoJdGhpcy50cmFuc2ZlclN0ZXAgPSAwOwoKCXRoaXMucmVhZGluZyA9IDA7Cgl0aGlzLmJpdHNSZWFkID0gMDsKCXRoaXMuYml0cyA9IDA7Cgl0aGlzLmNvbW1hbmQgPSAtMTsKCgl0aGlzLmNvbnRyb2wgPSAweDQwOwoJdGhpcy50aW1lID0gWwoJCTAsIC8vIFllYXIKCQkwLCAvLyBNb250aAoJCTAsIC8vIERheQoJCTAsIC8vIERheSBvZiB3ZWVrCgkJMCwgLy8gSG91cgoJCTAsIC8vIE1pbnV0ZQoJCTAgLy8gU2Vjb25kCgldOwp9OwoKR2FtZUJveUFkdmFuY2VSVEMucHJvdG90eXBlLnNldFBpbnMgPSBmdW5jdGlvbihueWJibGUpIHsKCXN3aXRjaCAodGhpcy50cmFuc2ZlclN0ZXApIHsKCWNhc2UgMDoKCQlpZiAoKG55YmJsZSAmIDUpID09IDEpIHsKCQkJdGhpcy50cmFuc2ZlclN0ZXAgPSAxOwoJCX0KCQlicmVhazsKCWNhc2UgMToKCQlpZiAobnliYmxlICYgNCkgewoJCQl0aGlzLnRyYW5zZmVyU3RlcCA9IDI7CgkJfQoJCWJyZWFrOwoJY2FzZSAyOgoJCWlmICghKG55YmJsZSAmIDEpKSB7CgkJCXRoaXMuYml0cyAmPSB+KDEgPDwgdGhpcy5iaXRzUmVhZCk7CgkJCXRoaXMuYml0cyB8PSAoKG55YmJsZSAmIDIpID4+IDEpIDw8IHRoaXMuYml0c1JlYWQ7CgkJfSBlbHNlIHsKCQkJaWYgKG55YmJsZSAmIDQpIHsKCQkJCS8vIFNJTyBkaXJlY3Rpb24gc2hvdWxkIGFsd2F5cyAhPSB0aGlzLnJlYWQKCQkJCWlmICgodGhpcy5kaXJlY3Rpb24gJiAyKSAmJiAhdGhpcy5yZWFkKSB7CgkJCQkJKyt0aGlzLmJpdHNSZWFkOwoJCQkJCWlmICh0aGlzLmJpdHNSZWFkID09IDgpIHsKCQkJCQkJdGhpcy5wcm9jZXNzQnl0ZSgpOwoJCQkJCX0KCQkJCX0gZWxzZSB7CgkJCQkJdGhpcy5ncGlvLm91dHB1dFBpbnMoNSB8ICh0aGlzLnNpb091dHB1dFBpbigpIDw8IDEpKTsKCQkJCQkrK3RoaXMuYml0c1JlYWQ7CgkJCQkJaWYgKHRoaXMuYml0c1JlYWQgPT0gOCkgewoJCQkJCQktLXRoaXMuYnl0ZXNSZW1haW5pbmc7CgkJCQkJCWlmICh0aGlzLmJ5dGVzUmVtYWluaW5nIDw9IDApIHsKCQkJCQkJCXRoaXMuY29tbWFuZCA9IC0xOwoJCQkJCQl9CgkJCQkJCXRoaXMuYml0c1JlYWQgPSAwOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsKCQkJCXRoaXMuYml0c1JlYWQgPSAwOwoJCQkJdGhpcy5ieXRlc1JlbWFpbmluZyA9IDA7CgkJCQl0aGlzLmNvbW1hbmQgPSAtMTsKCQkJCXRoaXMudHJhbnNmZXJTdGVwID0gMDsKCQkJfQoJCX0KCQlicmVhazsKCX0KCgl0aGlzLnBpbnMgPSBueWJibGUgJiA3Owp9OwoKR2FtZUJveUFkdmFuY2VSVEMucHJvdG90eXBlLnNldERpcmVjdGlvbiA9IGZ1bmN0aW9uKGRpcmVjdGlvbikgewoJdGhpcy5kaXJlY3Rpb24gPSBkaXJlY3Rpb247Cn07CgpHYW1lQm95QWR2YW5jZVJUQy5wcm90b3R5cGUucHJvY2Vzc0J5dGUgPSBmdW5jdGlvbigpIHsKCS0tdGhpcy5ieXRlc1JlbWFpbmluZzsKCXN3aXRjaCAodGhpcy5jb21tYW5kKSB7CgljYXNlIC0xOgoJCWlmICgodGhpcy5iaXRzICYgMHgwRikgPT0gMHgwNikgewoJCQl0aGlzLmNvbW1hbmQgPSAodGhpcy5iaXRzID4+IDQpICYgNzsKCQkJdGhpcy5yZWFkaW5nID0gdGhpcy5iaXRzICYgMHg4MDsKCgkJCXRoaXMuYnl0ZXNSZW1haW5pbmcgPSB0aGlzLnRvdGFsQnl0ZXNbdGhpcy5jb21tYW5kXTsKCQkJc3dpdGNoICh0aGlzLmNvbW1hbmQpIHsKCQkJY2FzZSAwOgoJCQkJdGhpcy5jb250cm9sID0gMDsKCQkJCWJyZWFrOwoJCQljYXNlIDI6CgkJCWNhc2UgNjoKCQkJCXRoaXMudXBkYXRlQ2xvY2soKTsKCQkJCWJyZWFrOwoJCQl9CgkJfSBlbHNlIHsKCQkJdGhpcy5ncGlvLmNvcmUuV0FSTignSW52YWxpZCBSVEMgY29tbWFuZCBieXRlOiAnICsgdGhpcy5iaXRzLnRvU3RyaW5nKDE2KSk7CgkJfQoJCWJyZWFrOwoJY2FzZSA0OgoJCS8vIENvbnRyb2wKCQl0aGlzLmNvbnRyb2wgPSB0aGlzLmJpdHMgJiAweDQwOwoJCWJyZWFrOwoJfQkKCXRoaXMuYml0cyA9IDA7Cgl0aGlzLmJpdHNSZWFkID0gMDsKCWlmICghdGhpcy5ieXRlc1JlbWFpbmluZykgewoJCXRoaXMuY29tbWFuZCA9IC0xOwoJfQp9OwoKR2FtZUJveUFkdmFuY2VSVEMucHJvdG90eXBlLnNpb091dHB1dFBpbiA9IGZ1bmN0aW9uKCkgewoJdmFyIG91dHB1dEJ5dGUgPSAwOwoJc3dpdGNoICh0aGlzLmNvbW1hbmQpIHsKCWNhc2UgNDoKCQlvdXRwdXRCeXRlID0gdGhpcy5jb250cm9sOwoJCWJyZWFrOwoJY2FzZSAyOgoJY2FzZSA2OgoJCW91dHB1dEJ5dGUgPSB0aGlzLnRpbWVbNyAtIHRoaXMuYnl0ZXNSZW1haW5pbmddOwoJCWJyZWFrOwoJfQoJdmFyIG91dHB1dCA9IChvdXRwdXRCeXRlID4+IHRoaXMuYml0c1JlYWQpICYgMTsKCXJldHVybiBvdXRwdXQ7Cn07CgpHYW1lQm95QWR2YW5jZVJUQy5wcm90b3R5cGUudXBkYXRlQ2xvY2sgPSBmdW5jdGlvbigpIHsKCXZhciBkYXRlID0gbmV3IERhdGUoKTsKCXRoaXMudGltZVswXSA9IHRoaXMuYmNkKGRhdGUuZ2V0RnVsbFllYXIoKSk7Cgl0aGlzLnRpbWVbMV0gPSB0aGlzLmJjZChkYXRlLmdldE1vbnRoKCkgKyAxKTsKCXRoaXMudGltZVsyXSA9IHRoaXMuYmNkKGRhdGUuZ2V0RGF0ZSgpKTsKCXRoaXMudGltZVszXSA9IGRhdGUuZ2V0RGF5KCkgLSAxOwoJaWYgKHRoaXMudGltZVszXSA8IDApIHsKCQl0aGlzLnRpbWVbM10gPSA2OwoJfQoJaWYgKHRoaXMuY29udHJvbCAmIDB4NDApIHsKCQkvLyAyNCBob3VyCgkJdGhpcy50aW1lWzRdID0gdGhpcy5iY2QoZGF0ZS5nZXRIb3VycygpKTsKCX0gZWxzZSB7CgkJdGhpcy50aW1lWzRdID0gdGhpcy5iY2QoZGF0ZS5nZXRIb3VycygpICUgMik7CgkJaWYgKGRhdGUuZ2V0SG91cnMoKSA+PSAxMikgewoJCQl0aGlzLnRpbWVbNF0gfD0gMHg4MDsKCQl9Cgl9Cgl0aGlzLnRpbWVbNV0gPSB0aGlzLmJjZChkYXRlLmdldE1pbnV0ZXMoKSk7Cgl0aGlzLnRpbWVbNl0gPSB0aGlzLmJjZChkYXRlLmdldFNlY29uZHMoKSk7Cn07CgpHYW1lQm95QWR2YW5jZVJUQy5wcm90b3R5cGUuYmNkID0gZnVuY3Rpb24oYmluYXJ5KSB7Cgl2YXIgY291bnRlciA9IGJpbmFyeSAlIDEwOwoJYmluYXJ5IC89IDEwOwoJY291bnRlciArPSAoYmluYXJ5ICUgMTApIDw8IDQ7CglyZXR1cm4gY291bnRlcjsKfTsK";

const GBA_js_io_js = "";

const GBA_js_irq_js = "";

const GBA_js_keypad_js = "ZnVuY3Rpb24gR2FtZUJveUFkdmFuY2VLZXlwYWQoKSB7Cgl0aGlzLktFWUNPREVfTEVGVCA9IDM3OwoJdGhpcy5LRVlDT0RFX1VQID0gMzg7Cgl0aGlzLktFWUNPREVfUklHSFQgPSAzOTsKCXRoaXMuS0VZQ09ERV9ET1dOID0gNDA7Cgl0aGlzLktFWUNPREVfU1RBUlQgPSAxMzsKCXRoaXMuS0VZQ09ERV9TRUxFQ1QgPSAyMjA7Cgl0aGlzLktFWUNPREVfQSA9IDkwOwoJdGhpcy5LRVlDT0RFX0IgPSA4ODsKCXRoaXMuS0VZQ09ERV9MID0gNjU7Cgl0aGlzLktFWUNPREVfUiA9IDgzOwoKCXRoaXMuR0FNRVBBRF9MRUZUID0gMTQ7Cgl0aGlzLkdBTUVQQURfVVAgPSAxMjsKCXRoaXMuR0FNRVBBRF9SSUdIVCA9IDE1OwoJdGhpcy5HQU1FUEFEX0RPV04gPSAxMzsKCXRoaXMuR0FNRVBBRF9TVEFSVCA9IDk7Cgl0aGlzLkdBTUVQQURfU0VMRUNUID0gODsKCXRoaXMuR0FNRVBBRF9BID0gMTsKCXRoaXMuR0FNRVBBRF9CID0gMDsKCXRoaXMuR0FNRVBBRF9MID0gNDsKCXRoaXMuR0FNRVBBRF9SID0gNTsKCXRoaXMuR0FNRVBBRF9USFJFU0hPTEQgPSAwLjI7CgoJdGhpcy5BID0gMDsKCXRoaXMuQiA9IDE7Cgl0aGlzLlNFTEVDVCA9IDI7Cgl0aGlzLlNUQVJUID0gMzsKCXRoaXMuUklHSFQgPSA0OwoJdGhpcy5MRUZUID0gNTsKCXRoaXMuVVAgPSA2OwoJdGhpcy5ET1dOID0gNzsKCXRoaXMuUiA9IDg7Cgl0aGlzLkwgPSA5OwoKCXRoaXMuY3VycmVudERvd24gPSAweDAzRkY7Cgl0aGlzLmVhdElucHV0ID0gZmFsc2U7CgoJdGhpcy5nYW1lcGFkcyA9IFtdOwp9OwoKR2FtZUJveUFkdmFuY2VLZXlwYWQucHJvdG90eXBlLmtleWJvYXJkSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHsKCXZhciB0b2dnbGUgPSAwOwoJc3dpdGNoIChlLmtleUNvZGUpIHsKCWNhc2UgdGhpcy5LRVlDT0RFX1NUQVJUOgoJCXRvZ2dsZSA9IHRoaXMuU1RBUlQ7CgkJYnJlYWs7CgljYXNlIHRoaXMuS0VZQ09ERV9TRUxFQ1Q6CgkJdG9nZ2xlID0gdGhpcy5TRUxFQ1Q7CgkJYnJlYWs7CgljYXNlIHRoaXMuS0VZQ09ERV9BOgoJCXRvZ2dsZSA9IHRoaXMuQTsKCQlicmVhazsKCWNhc2UgdGhpcy5LRVlDT0RFX0I6CgkJdG9nZ2xlID0gdGhpcy5COwoJCWJyZWFrOwoJY2FzZSB0aGlzLktFWUNPREVfTDoKCQl0b2dnbGUgPSB0aGlzLkw7CgkJYnJlYWs7CgljYXNlIHRoaXMuS0VZQ09ERV9SOgoJCXRvZ2dsZSA9IHRoaXMuUjsKCQlicmVhazsKCWNhc2UgdGhpcy5LRVlDT0RFX1VQOgoJCXRvZ2dsZSA9IHRoaXMuVVA7CgkJYnJlYWs7CgljYXNlIHRoaXMuS0VZQ09ERV9SSUdIVDoKCQl0b2dnbGUgPSB0aGlzLlJJR0hUOwoJCWJyZWFrOwoJY2FzZSB0aGlzLktFWUNPREVfRE9XTjoKCQl0b2dnbGUgPSB0aGlzLkRPV047CgkJYnJlYWs7CgljYXNlIHRoaXMuS0VZQ09ERV9MRUZUOgoJCXRvZ2dsZSA9IHRoaXMuTEVGVDsKCQlicmVhazsKCWRlZmF1bHQ6CgkJcmV0dXJuOwoJfQoKCXRvZ2dsZSA9IDEgPDwgdG9nZ2xlOwoJaWYgKGUudHlwZSA9PSAia2V5ZG93biIpIHsKCQl0aGlzLmN1cnJlbnREb3duICY9IH50b2dnbGU7Cgl9IGVsc2UgewoJCXRoaXMuY3VycmVudERvd24gfD0gdG9nZ2xlOwoJfQoKCWlmICh0aGlzLmVhdElucHV0KSB7CgkJZS5wcmV2ZW50RGVmYXVsdCgpOwoJfQp9OwoKR2FtZUJveUFkdmFuY2VLZXlwYWQucHJvdG90eXBlLmdhbWVwYWRIYW5kbGVyID0gZnVuY3Rpb24oZ2FtZXBhZCkgewoJdmFyIHZhbHVlID0gMDsKCWlmIChnYW1lcGFkLmJ1dHRvbnNbdGhpcy5HQU1FUEFEX0xFRlRdID4gdGhpcy5HQU1FUEFEX1RIUkVTSE9MRCkgewoJCXZhbHVlIHw9IDEgPDwgdGhpcy5MRUZUOwoJfQoJaWYgKGdhbWVwYWQuYnV0dG9uc1t0aGlzLkdBTUVQQURfVVBdID4gdGhpcy5HQU1FUEFEX1RIUkVTSE9MRCkgewoJCXZhbHVlIHw9IDEgPDwgdGhpcy5VUDsKCX0KCWlmIChnYW1lcGFkLmJ1dHRvbnNbdGhpcy5HQU1FUEFEX1JJR0hUXSA+IHRoaXMuR0FNRVBBRF9USFJFU0hPTEQpIHsKCQl2YWx1ZSB8PSAxIDw8IHRoaXMuUklHSFQ7Cgl9CglpZiAoZ2FtZXBhZC5idXR0b25zW3RoaXMuR0FNRVBBRF9ET1dOXSA+IHRoaXMuR0FNRVBBRF9USFJFU0hPTEQpIHsKCQl2YWx1ZSB8PSAxIDw8IHRoaXMuRE9XTjsKCX0KCWlmIChnYW1lcGFkLmJ1dHRvbnNbdGhpcy5HQU1FUEFEX1NUQVJUXSA+IHRoaXMuR0FNRVBBRF9USFJFU0hPTEQpIHsKCQl2YWx1ZSB8PSAxIDw8IHRoaXMuU1RBUlQ7Cgl9CglpZiAoZ2FtZXBhZC5idXR0b25zW3RoaXMuR0FNRVBBRF9TRUxFQ1RdID4gdGhpcy5HQU1FUEFEX1RIUkVTSE9MRCkgewoJCXZhbHVlIHw9IDEgPDwgdGhpcy5TRUxFQ1Q7Cgl9CglpZiAoZ2FtZXBhZC5idXR0b25zW3RoaXMuR0FNRVBBRF9BXSA+IHRoaXMuR0FNRVBBRF9USFJFU0hPTEQpIHsKCQl2YWx1ZSB8PSAxIDw8IHRoaXMuQTsKCX0KCWlmIChnYW1lcGFkLmJ1dHRvbnNbdGhpcy5HQU1FUEFEX0JdID4gdGhpcy5HQU1FUEFEX1RIUkVTSE9MRCkgewoJCXZhbHVlIHw9IDEgPDwgdGhpcy5COwoJfQoJaWYgKGdhbWVwYWQuYnV0dG9uc1t0aGlzLkdBTUVQQURfTF0gPiB0aGlzLkdBTUVQQURfVEhSRVNIT0xEKSB7CgkJdmFsdWUgfD0gMSA8PCB0aGlzLkw7Cgl9CglpZiAoZ2FtZXBhZC5idXR0b25zW3RoaXMuR0FNRVBBRF9SXSA+IHRoaXMuR0FNRVBBRF9USFJFU0hPTEQpIHsKCQl2YWx1ZSB8PSAxIDw8IHRoaXMuUjsKCX0KCgl0aGlzLmN1cnJlbnREb3duID0gfnZhbHVlICYgMHgzRkY7Cn07CgpHYW1lQm95QWR2YW5jZUtleXBhZC5wcm90b3R5cGUuZ2FtZXBhZENvbm5lY3RIYW5kbGVyID0gZnVuY3Rpb24oZ2FtZXBhZCkgewoJdGhpcy5nYW1lcGFkcy5wdXNoKGdhbWVwYWQpOwp9OwoKR2FtZUJveUFkdmFuY2VLZXlwYWQucHJvdG90eXBlLmdhbWVwYWREaXNjb25uZWN0SGFuZGxlciA9IGZ1bmN0aW9uKGdhbWVwYWQpIHsKCXRoaXMuZ2FtZXBhZHMgPSBzZWxmLmdhbWVwYWRzLmZpbHRlcihmdW5jdGlvbihvdGhlcikgeyByZXR1cm4gb3RoZXIgIT0gZ2FtZXBhZCB9KTsKfTsKCkdhbWVCb3lBZHZhbmNlS2V5cGFkLnByb3RvdHlwZS5wb2xsR2FtZXBhZHMgPSBmdW5jdGlvbigpIHsKCXZhciBuYXZpZ2F0b3JMaXN0ID0gW107CglpZiAobmF2aWdhdG9yLndlYmtpdEdldEdhbWVwYWRzKSB7CgkJbmF2aWdhdG9yTGlzdCA9IG5hdmlnYXRvci53ZWJraXRHZXRHYW1lcGFkcygpOwoJfSBlbHNlIGlmIChuYXZpZ2F0b3IuZ2V0R2FtZXBhZHMpIHsKCQluYXZpZ2F0b3JMaXN0ID0gbmF2aWdhdG9yLmdldEdhbWVwYWRzKCk7Cgl9CgoJLy8gTGV0J3MgYWxsIGdpdmUgYSBzaG91dCBvdXQgdG8gQ2hyb21lIGZvciBtYWtpbmcgdXMgZ2V0IHRoZSBnYW1lcGFkcyBFVkVSWSBGUkFNRQoJaWYgKG5hdmlnYXRvckxpc3QubGVuZ3RoKSB7CgkJdGhpcy5nYW1lcGFkcyA9IFtdOwoJfQoJZm9yICh2YXIgaSA9IDA7IGkgPCBuYXZpZ2F0b3JMaXN0Lmxlbmd0aDsgKytpKSB7CgkJaWYgKG5hdmlnYXRvckxpc3RbaV0pIHsKCQkJdGhpcy5nYW1lcGFkcy5wdXNoKG5hdmlnYXRvckxpc3RbaV0pOwoJCX0KCX0KCWlmICh0aGlzLmdhbWVwYWRzLmxlbmd0aCA+IDApIHsKCQl0aGlzLmdhbWVwYWRIYW5kbGVyKHRoaXMuZ2FtZXBhZHNbMF0pOwoJfQoKfTsKCkdhbWVCb3lBZHZhbmNlS2V5cGFkLnByb3RvdHlwZS5yZWdpc3RlckhhbmRsZXJzID0gZnVuY3Rpb24oKSB7Cgl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsIHRoaXMua2V5Ym9hcmRIYW5kbGVyLmJpbmQodGhpcyksIHRydWUpOwoJd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImtleXVwIiwgdGhpcy5rZXlib2FyZEhhbmRsZXIuYmluZCh0aGlzKSwgdHJ1ZSk7CgoJd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImdhbWVwYWRjb25uZWN0ZWQiLCB0aGlzLmdhbWVwYWRDb25uZWN0SGFuZGxlci5iaW5kKHRoaXMpLCB0cnVlKTsKCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJtb3pnYW1lcGFkY29ubmVjdGVkIiwgdGhpcy5nYW1lcGFkQ29ubmVjdEhhbmRsZXIuYmluZCh0aGlzKSwgdHJ1ZSk7Cgl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigid2Via2l0Z2FtZXBhZGNvbm5lY3RlZCIsIHRoaXMuZ2FtZXBhZENvbm5lY3RIYW5kbGVyLmJpbmQodGhpcyksIHRydWUpOwoKCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJnYW1lcGFkZGlzY29ubmVjdGVkIiwgdGhpcy5nYW1lcGFkRGlzY29ubmVjdEhhbmRsZXIuYmluZCh0aGlzKSwgdHJ1ZSk7Cgl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibW96Z2FtZXBhZGRpc2Nvbm5lY3RlZCIsIHRoaXMuZ2FtZXBhZERpc2Nvbm5lY3RIYW5kbGVyLmJpbmQodGhpcyksIHRydWUpOwoJd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIndlYmtpdGdhbWVwYWRkaXNjb25uZWN0ZWQiLCB0aGlzLmdhbWVwYWREaXNjb25uZWN0SGFuZGxlci5iaW5kKHRoaXMpLCB0cnVlKTsKfTsK";

const GBA_js_mmu_js = "";

const GBA_js_savedata_js = "";

const GBA_js_sio_js = "ZnVuY3Rpb24gR2FtZUJveUFkdmFuY2VTSU8oKSB7Cgl0aGlzLlNJT19OT1JNQUxfOCA9IDA7Cgl0aGlzLlNJT19OT1JNQUxfMzIgPSAxOwoJdGhpcy5TSU9fTVVMVEkgPSAyOwoJdGhpcy5TSU9fVUFSVCA9IDM7Cgl0aGlzLlNJT19HUElPID0gODsKCXRoaXMuU0lPX0pPWUJVUyA9IDEyOwoKCXRoaXMuQkFVRCA9IFsgOTYwMCwgMzg0MDAsIDU3NjAwLCAxMTUyMDAgXTsKfQoKR2FtZUJveUFkdmFuY2VTSU8ucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24oKSB7Cgl0aGlzLm1vZGUgPSB0aGlzLlNJT19HUElPOwoJdGhpcy5zZCA9IGZhbHNlOwoKCXRoaXMuaXJxID0gZmFsc2U7Cgl0aGlzLm11bHRpcGxheWVyID0gewoJCWJhdWQ6IDAsCgkJc2k6IDAsCgkJaWQ6IDAsCgkJZXJyb3I6IDAsCgkJYnVzeTogMCwKCgkJc3RhdGVzOiBbIDB4RkZGRiwgMHhGRkZGLCAweEZGRkYsIDB4RkZGRiBdCgl9OwoKCXRoaXMubGlua0xheWVyID0gbnVsbDsKfTsKCkdhbWVCb3lBZHZhbmNlU0lPLnByb3RvdHlwZS5zZXRNb2RlID0gZnVuY3Rpb24obW9kZSkgewoJaWYgKG1vZGUgJiAweDgpIHsKCQltb2RlICY9IDB4QzsKCX0gZWxzZSB7CgkJbW9kZSAmPSAweDM7Cgl9Cgl0aGlzLm1vZGUgPSBtb2RlOwoKCXRoaXMuY29yZS5JTkZPKCdTZXR0aW5nIFNJTyBtb2RlIHRvICcgKyBoZXgobW9kZSwgMSkpOwp9OwoKR2FtZUJveUFkdmFuY2VTSU8ucHJvdG90eXBlLndyaXRlUkNOVCA9IGZ1bmN0aW9uKHZhbHVlKSB7CglpZiAodGhpcy5tb2RlICE9IHRoaXMuU0lPX0dQSU8pIHsKCQlyZXR1cm47Cgl9CgoJdGhpcy5jb3JlLlNUVUIoJ0dlbmVyYWwgcHVycG9zZSBzZXJpYWwgbm90IHN1cHBvcnRlZCcpOwp9OwoKR2FtZUJveUFkdmFuY2VTSU8ucHJvdG90eXBlLndyaXRlU0lPQ05UID0gZnVuY3Rpb24odmFsdWUpIHsKCXN3aXRjaCAodGhpcy5tb2RlKSB7CgljYXNlIHRoaXMuU0lPX05PUk1BTF84OgoJCXRoaXMuY29yZS5TVFVCKCc4LWJpdCB0cmFuc2ZlciB1bnN1cHBvcnRlZCcpOwoJCWJyZWFrOwoJY2FzZSB0aGlzLlNJT19OT1JNQUxfMzI6CgkJdGhpcy5jb3JlLlNUVUIoJzMyLWJpdCB0cmFuc2ZlciB1bnN1cHBvcnRlZCcpOwoJCWJyZWFrOwoJY2FzZSB0aGlzLlNJT19NVUxUSToKCQl0aGlzLm11bHRpcGxheWVyLmJhdWQgPSB2YWx1ZSAmIDB4MDAwMzsKCQlpZiAodGhpcy5saW5rTGF5ZXIpIHsKCQkJdGhpcy5saW5rTGF5ZXIuc2V0QmF1ZCh0aGlzLkJBVURbdGhpcy5tdWx0aXBsYXllci5iYXVkXSk7CgkJfQoKCQlpZiAoIXRoaXMubXVsdGlwbGF5ZXIuc2kpIHsKCQkJdGhpcy5tdWx0aXBsYXllci5idXN5ID0gdmFsdWUgJiAweDAwODA7CgkJCWlmICh0aGlzLmxpbmtMYXllciAmJiB0aGlzLm11bHRpcGxheWVyLmJ1c3kpIHsKCQkJCXRoaXMubGlua0xheWVyLnN0YXJ0TXVsdGlwbGF5ZXJUcmFuc2ZlcigpOwoJCQl9CgkJfQoJCXRoaXMuaXJxID0gdmFsdWUgJiAweDQwMDA7CgkJYnJlYWs7CgljYXNlIHRoaXMuU0lPX1VBUlQ6CgkJdGhpcy5jb3JlLlNUVUIoJ1VBUlQgdW5zdXBwb3J0ZWQnKTsKCQlicmVhazsKCWNhc2UgdGhpcy5TSU9fR1BJTzoKCQkvLyBUaGlzIHJlZ2lzdGVyIGlzbid0IHVzZWQgaW4gZ2VuZXJhbC1wdXJwb3NlIG1vZGUKCQlicmVhazsKCWNhc2UgdGhpcy5TSU9fSk9ZQlVTOgoJCXRoaXMuY29yZS5TVFVCKCdKT1kgQlVTIHVuc3VwcG9ydGVkJyk7CgkJYnJlYWs7Cgl9Cn07CgpHYW1lQm95QWR2YW5jZVNJTy5wcm90b3R5cGUucmVhZFNJT0NOVCA9IGZ1bmN0aW9uKCkgewoJdmFyIHZhbHVlID0gKHRoaXMubW9kZSA8PCAxMikgJiAweEZGRkY7Cglzd2l0Y2ggKHRoaXMubW9kZSkgewoJY2FzZSB0aGlzLlNJT19OT1JNQUxfODoKCQl0aGlzLmNvcmUuU1RVQignOC1iaXQgdHJhbnNmZXIgdW5zdXBwb3J0ZWQnKTsKCQlicmVhazsKCWNhc2UgdGhpcy5TSU9fTk9STUFMXzMyOgoJCXRoaXMuY29yZS5TVFVCKCczMi1iaXQgdHJhbnNmZXIgdW5zdXBwb3J0ZWQnKTsKCQlicmVhazsKCWNhc2UgdGhpcy5TSU9fTVVMVEk6CgkJdmFsdWUgfD0gdGhpcy5tdWx0aXBsYXllci5iYXVkOwoJCXZhbHVlIHw9IHRoaXMubXVsdGlwbGF5ZXIuc2k7CgkJdmFsdWUgfD0gKCEhdGhpcy5zZCkgPDwgMzsKCQl2YWx1ZSB8PSB0aGlzLm11bHRpcGxheWVyLmlkIDw8IDQ7CgkJdmFsdWUgfD0gdGhpcy5tdWx0aXBsYXllci5lcnJvcjsKCQl2YWx1ZSB8PSB0aGlzLm11bHRpcGxheWVyLmJ1c3k7CgkJdmFsdWUgfD0gKCEhdGhpcy5tdWx0aXBsYXllci5pcnEpIDw8IDE0OwoJCWJyZWFrOwoJY2FzZSB0aGlzLlNJT19VQVJUOgoJCXRoaXMuY29yZS5TVFVCKCdVQVJUIHVuc3VwcG9ydGVkJyk7CgkJYnJlYWs7CgljYXNlIHRoaXMuU0lPX0dQSU86CgkJLy8gVGhpcyByZWdpc3RlciBpc24ndCB1c2VkIGluIGdlbmVyYWwtcHVycG9zZSBtb2RlCgkJYnJlYWs7CgljYXNlIHRoaXMuU0lPX0pPWUJVUzoKCQl0aGlzLmNvcmUuU1RVQignSk9ZIEJVUyB1bnN1cHBvcnRlZCcpOwoJCWJyZWFrOwoJfQoJcmV0dXJuIHZhbHVlOwp9OwoKR2FtZUJveUFkdmFuY2VTSU8ucHJvdG90eXBlLnJlYWQgPSBmdW5jdGlvbihzbG90KSB7Cglzd2l0Y2ggKHRoaXMubW9kZSkgewoJY2FzZSB0aGlzLlNJT19OT1JNQUxfMzI6CgkJdGhpcy5jb3JlLlNUVUIoJzMyLWJpdCB0cmFuc2ZlciB1bnN1cHBvcnRlZCcpOwoJCWJyZWFrOwoJY2FzZSB0aGlzLlNJT19NVUxUSToKCQlyZXR1cm4gdGhpcy5tdWx0aXBsYXllci5zdGF0ZXNbc2xvdF07CgljYXNlIHRoaXMuU0lPX1VBUlQ6CgkJdGhpcy5jb3JlLlNUVUIoJ1VBUlQgdW5zdXBwb3J0ZWQnKTsKCQlicmVhazsKCWRlZmF1bHQ6CgkJdGhpcy5jb3JlLldBUk4oJ1JlYWRpbmcgZnJvbSB0cmFuc2ZlciByZWdpc3RlciBpbiB1bnN1cHBvcnRlZCBtb2RlJyk7CgkJYnJlYWs7Cgl9CglyZXR1cm4gMDsKfTsK";

const GBA_js_thumb_js ="";

const GBA_js_util_js = "";

const GBA_js_video_js = "ZnVuY3Rpb24gR2FtZUJveUFkdmFuY2VWaWRlbygpIHsKCXRoaXMucmVuZGVyUGF0aCA9IG5ldyBHYW1lQm95QWR2YW5jZVNvZnR3YXJlUmVuZGVyZXIoKTsKCgl0aGlzLkNZQ0xFU19QRVJfUElYRUwgPSA0OwoKCXRoaXMuSE9SSVpPTlRBTF9QSVhFTFMgPSAyNDA7Cgl0aGlzLkhCTEFOS19QSVhFTFMgPSA2ODsKCXRoaXMuSERSQVdfTEVOR1RIID0gMTAwNjsKCXRoaXMuSEJMQU5LX0xFTkdUSCA9IDIyNjsKCXRoaXMuSE9SSVpPTlRBTF9MRU5HVEggPSAxMjMyOwoKCXRoaXMuVkVSVElDQUxfUElYRUxTID0gMTYwOwoJdGhpcy5WQkxBTktfUElYRUxTID0gNjg7Cgl0aGlzLlZFUlRJQ0FMX1RPVEFMX1BJWEVMUyA9IDIyODsKCgl0aGlzLlRPVEFMX0xFTkdUSCA9IDI4MDg5NjsKCgl0aGlzLmRyYXdDYWxsYmFjayA9IGZ1bmN0aW9uKCkge307Cgl0aGlzLnZibGFua0NhbGxiYWNrID0gZnVuY3Rpb24oKSB7fTsKfTsKCkdhbWVCb3lBZHZhbmNlVmlkZW8ucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24oKSB7Cgl0aGlzLnJlbmRlclBhdGguY2xlYXIodGhpcy5jcHUubW11KTsKCgkvLyBESVNQU1RBVAoJdGhpcy5ESVNQU1RBVF9NQVNLID0gMHhGRjM4OwoJdGhpcy5pbkhibGFuayA9IGZhbHNlOwoJdGhpcy5pblZibGFuayA9IGZhbHNlOwoJdGhpcy52Y291bnRlciA9IDA7Cgl0aGlzLnZibGFua0lSUSA9IDA7Cgl0aGlzLmhibGFua0lSUSA9IDA7Cgl0aGlzLnZjb3VudGVySVJRID0gMDsKCXRoaXMudmNvdW50U2V0dGluZyA9IDA7CgoJLy8gVkNPVU5UCgl0aGlzLnZjb3VudCA9IC0xOwoKCXRoaXMubGFzdEhibGFuayA9IDA7Cgl0aGlzLm5leHRIYmxhbmsgPSB0aGlzLkhEUkFXX0xFTkdUSDsKCXRoaXMubmV4dEV2ZW50ID0gdGhpcy5uZXh0SGJsYW5rOwoKCXRoaXMubmV4dEhibGFua0lSUSA9IDA7Cgl0aGlzLm5leHRWYmxhbmtJUlEgPSAwOwoJdGhpcy5uZXh0VmNvdW50ZXJJUlEgPSAwOwp9OwoKR2FtZUJveUFkdmFuY2VWaWRlby5wcm90b3R5cGUuZnJlZXplID0gZnVuY3Rpb24oKSB7CglyZXR1cm4gewoJCSdpbkhibGFuayc6IHRoaXMuaW5IYmxhbmssCgkJJ2luVmJsYW5rJzogdGhpcy5pblZibGFuaywKCQkndmNvdW50ZXInOiB0aGlzLnZjb3VudGVyLAoJCSd2YmxhbmtJUlEnOiB0aGlzLnZibGFua0lSUSwKCQknaGJsYW5rSVJRJzogdGhpcy5oYmxhbmtJUlEsCgkJJ3Zjb3VudGVySVJRJzogdGhpcy52Y291bnRlcklSUSwKCQkndmNvdW50U2V0dGluZyc6IHRoaXMudmNvdW50U2V0dGluZywKCQkndmNvdW50JzogdGhpcy52Y291bnQsCgkJJ2xhc3RIYmxhbmsnOiB0aGlzLmxhc3RIYmxhbmssCgkJJ25leHRIYmxhbmsnOiB0aGlzLm5leHRIYmxhbmssCgkJJ25leHRFdmVudCc6IHRoaXMubmV4dEV2ZW50LAoJCSduZXh0SGJsYW5rSVJRJzogdGhpcy5uZXh0SGJsYW5rSVJRLAoJCSduZXh0VmJsYW5rSVJRJzogdGhpcy5uZXh0VmJsYW5rSVJRLAoJCSduZXh0VmNvdW50ZXJJUlEnOiB0aGlzLm5leHRWY291bnRlcklSUSwKCQkncmVuZGVyUGF0aCc6IHRoaXMucmVuZGVyUGF0aC5mcmVlemUodGhpcy5jb3JlLmVuY29kZUJhc2U2NCkKCX07Cn07CgpHYW1lQm95QWR2YW5jZVZpZGVvLnByb3RvdHlwZS5kZWZyb3N0ID0gZnVuY3Rpb24oZnJvc3QpIHsKCXRoaXMuaW5IYmxhbmsgPSBmcm9zdC5pbkhibGFuazsKCXRoaXMuaW5WYmxhbmsgPSBmcm9zdC5pblZibGFuazsKCXRoaXMudmNvdW50ZXIgPSBmcm9zdC52Y291bnRlcjsKCXRoaXMudmJsYW5rSVJRID0gZnJvc3QudmJsYW5rSVJROwoJdGhpcy5oYmxhbmtJUlEgPSBmcm9zdC5oYmxhbmtJUlE7Cgl0aGlzLnZjb3VudGVySVJRID0gZnJvc3QudmNvdW50ZXJJUlE7Cgl0aGlzLnZjb3VudFNldHRpbmcgPSBmcm9zdC52Y291bnRTZXR0aW5nOwoJdGhpcy52Y291bnQgPSBmcm9zdC52Y291bnQ7Cgl0aGlzLmxhc3RIYmxhbmsgPSBmcm9zdC5sYXN0SGJsYW5rOwoJdGhpcy5uZXh0SGJsYW5rID0gZnJvc3QubmV4dEhibGFuazsKCXRoaXMubmV4dEV2ZW50ID0gZnJvc3QubmV4dEV2ZW50OwoJdGhpcy5uZXh0SGJsYW5rSVJRID0gZnJvc3QubmV4dEhibGFua0lSUTsKCXRoaXMubmV4dFZibGFua0lSUSA9IGZyb3N0Lm5leHRWYmxhbmtJUlE7Cgl0aGlzLm5leHRWY291bnRlcklSUSA9IGZyb3N0Lm5leHRWY291bnRlcklSUTsKCXRoaXMucmVuZGVyUGF0aC5kZWZyb3N0KGZyb3N0LnJlbmRlclBhdGgsIHRoaXMuY29yZS5kZWNvZGVCYXNlNjQpOwp9OwoKR2FtZUJveUFkdmFuY2VWaWRlby5wcm90b3R5cGUuc2V0QmFja2luZyA9IGZ1bmN0aW9uKGJhY2tpbmcpIHsKCXZhciBwaXhlbERhdGEgPSBiYWNraW5nLmNyZWF0ZUltYWdlRGF0YSh0aGlzLkhPUklaT05UQUxfUElYRUxTLCB0aGlzLlZFUlRJQ0FMX1BJWEVMUyk7Cgl0aGlzLmNvbnRleHQgPSBiYWNraW5nOwoKCS8vIENsZWFyIGJhY2tpbmcgZmlyc3QKCWZvciAodmFyIG9mZnNldCA9IDA7IG9mZnNldCA8IHRoaXMuSE9SSVpPTlRBTF9QSVhFTFMgKiB0aGlzLlZFUlRJQ0FMX1BJWEVMUyAqIDQ7KSB7CgkJcGl4ZWxEYXRhLmRhdGFbb2Zmc2V0KytdID0gMHhGRjsKCQlwaXhlbERhdGEuZGF0YVtvZmZzZXQrK10gPSAweEZGOwoJCXBpeGVsRGF0YS5kYXRhW29mZnNldCsrXSA9IDB4RkY7CgkJcGl4ZWxEYXRhLmRhdGFbb2Zmc2V0KytdID0gMHhGRjsKCX0KCgl0aGlzLnJlbmRlclBhdGguc2V0QmFja2luZyhwaXhlbERhdGEpOwp9CgpHYW1lQm95QWR2YW5jZVZpZGVvLnByb3RvdHlwZS51cGRhdGVUaW1lcnMgPSBmdW5jdGlvbihjcHUpIHsKCXZhciBjeWNsZXMgPSBjcHUuY3ljbGVzOwoKCWlmICh0aGlzLm5leHRFdmVudCA8PSBjeWNsZXMpIHsKCQlpZiAodGhpcy5pbkhibGFuaykgewoJCQkvLyBFbmQgSGJsYW5rCgkJCXRoaXMuaW5IYmxhbmsgPSBmYWxzZTsKCQkJdGhpcy5uZXh0RXZlbnQgPSB0aGlzLm5leHRIYmxhbms7CgoJCQkrK3RoaXMudmNvdW50OwoKCQkJc3dpdGNoICh0aGlzLnZjb3VudCkgewoJCQljYXNlIHRoaXMuVkVSVElDQUxfUElYRUxTOgoJCQkJdGhpcy5pblZibGFuayA9IHRydWU7CgkJCQl0aGlzLnJlbmRlclBhdGguZmluaXNoRHJhdyh0aGlzKTsKCQkJCXRoaXMubmV4dFZibGFua0lSUSA9IHRoaXMubmV4dEV2ZW50ICsgdGhpcy5UT1RBTF9MRU5HVEg7CgkJCQl0aGlzLmNwdS5tbXUucnVuVmJsYW5rRG1hcygpOwoJCQkJaWYgKHRoaXMudmJsYW5rSVJRKSB7CgkJCQkJdGhpcy5jcHUuaXJxLnJhaXNlSVJRKHRoaXMuY3B1LmlycS5JUlFfVkJMQU5LKTsKCQkJCX0KCQkJCXRoaXMudmJsYW5rQ2FsbGJhY2soKTsKCQkJCWJyZWFrOwoJCQljYXNlIHRoaXMuVkVSVElDQUxfVE9UQUxfUElYRUxTIC0gMToKCQkJCXRoaXMuaW5WYmxhbmsgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlIHRoaXMuVkVSVElDQUxfVE9UQUxfUElYRUxTOgoJCQkJdGhpcy52Y291bnQgPSAwOwoJCQkJdGhpcy5yZW5kZXJQYXRoLnN0YXJ0RHJhdygpOwoJCQkJYnJlYWs7CgkJCX0KCgkJCXRoaXMudmNvdW50ZXIgPSB0aGlzLnZjb3VudCA9PSB0aGlzLnZjb3VudFNldHRpbmc7CgkJCWlmICh0aGlzLnZjb3VudGVyICYmIHRoaXMudmNvdW50ZXJJUlEpIHsKCQkJCXRoaXMuY3B1LmlycS5yYWlzZUlSUSh0aGlzLmNwdS5pcnEuSVJRX1ZDT1VOVEVSKTsKCQkJCXRoaXMubmV4dFZjb3VudGVySVJRICs9IHRoaXMuVE9UQUxfTEVOR1RIOwoJCQl9CgoJCQlpZiAodGhpcy52Y291bnQgPCB0aGlzLlZFUlRJQ0FMX1BJWEVMUykgewoJCQkJdGhpcy5yZW5kZXJQYXRoLmRyYXdTY2FubGluZSh0aGlzLnZjb3VudCk7CgkJCX0KCQl9IGVsc2UgewoJCQkvLyBCZWdpbiBIYmxhbmsKCQkJdGhpcy5pbkhibGFuayA9IHRydWU7CgkJCXRoaXMubGFzdEhibGFuayA9IHRoaXMubmV4dEhibGFuazsKCQkJdGhpcy5uZXh0RXZlbnQgPSB0aGlzLmxhc3RIYmxhbmsgKyB0aGlzLkhCTEFOS19MRU5HVEg7CgkJCXRoaXMubmV4dEhibGFuayA9IHRoaXMubmV4dEV2ZW50ICsgdGhpcy5IRFJBV19MRU5HVEg7CgkJCXRoaXMubmV4dEhibGFua0lSUSA9IHRoaXMubmV4dEhibGFuazsKCgkJCWlmICh0aGlzLnZjb3VudCA8IHRoaXMuVkVSVElDQUxfUElYRUxTKSB7CgkJCQl0aGlzLmNwdS5tbXUucnVuSGJsYW5rRG1hcygpOwoJCQl9CgkJCWlmICh0aGlzLmhibGFua0lSUSkgewoJCQkJdGhpcy5jcHUuaXJxLnJhaXNlSVJRKHRoaXMuY3B1LmlycS5JUlFfSEJMQU5LKTsKCQkJfQoJCX0KCX0KfTsKCkdhbWVCb3lBZHZhbmNlVmlkZW8ucHJvdG90eXBlLndyaXRlRGlzcGxheVN0YXQgPSBmdW5jdGlvbih2YWx1ZSkgewoJdGhpcy52YmxhbmtJUlEgPSB2YWx1ZSAmIDB4MDAwODsKCXRoaXMuaGJsYW5rSVJRID0gdmFsdWUgJiAweDAwMTA7Cgl0aGlzLnZjb3VudGVySVJRID0gdmFsdWUgJiAweDAwMjA7Cgl0aGlzLnZjb3VudFNldHRpbmcgPSAodmFsdWUgJiAweEZGMDApID4+IDg7CgoJaWYgKHRoaXMudmNvdW50ZXJJUlEpIHsKCQkvLyBGSVhNRTogdGhpcyBjYW4gYmUgdG9vIGxhdGUgaWYgd2UncmUgaW4gdGhlIG1pZGRsZSBvZiBhbiBIYmxhbmsKCQl0aGlzLm5leHRWY291bnRlcklSUSA9IHRoaXMubmV4dEhibGFuayArIHRoaXMuSEJMQU5LX0xFTkdUSCArICh0aGlzLnZjb3VudFNldHRpbmcgLSB0aGlzLnZjb3VudCkgKiB0aGlzLkhPUklaT05UQUxfTEVOR1RIOwoJCWlmICh0aGlzLm5leHRWY291bnRlcklSUSA8IHRoaXMubmV4dEV2ZW50KSB7CgkJCXRoaXMubmV4dFZjb3VudGVySVJRICs9IHRoaXMuVE9UQUxfTEVOR1RIOwoJCX0KCX0KfTsKCkdhbWVCb3lBZHZhbmNlVmlkZW8ucHJvdG90eXBlLnJlYWREaXNwbGF5U3RhdCA9IGZ1bmN0aW9uKCkgewoJcmV0dXJuICh0aGlzLmluVmJsYW5rKSB8ICh0aGlzLmluSGJsYW5rIDw8IDEpIHwgKHRoaXMudmNvdW50ZXIgPDwgMik7Cn07CgpHYW1lQm95QWR2YW5jZVZpZGVvLnByb3RvdHlwZS5maW5pc2hEcmF3ID0gZnVuY3Rpb24ocGl4ZWxEYXRhKSB7Cgl0aGlzLmNvbnRleHQucHV0SW1hZ2VEYXRhKHBpeGVsRGF0YSwgMCwgMCk7Cgl0aGlzLmRyYXdDYWxsYmFjaygpOwp9Owo=";

const GBA_js_video_proxy_js = "";

const GBA_js_video_software_js = "";

const GBA_js_video_worker_js = "aW1wb3J0U2NyaXB0cygnc29mdHdhcmUuanMnKTsKCnZhciB2aWRlbyA9IG5ldyBHYW1lQm95QWR2YW5jZVNvZnR3YXJlUmVuZGVyZXIoKTsKdmFyIHByb3h5QmFja2luZyA9IG51bGw7CnZhciBjdXJyZW50RnJhbWUgPSAwOwoKc2VsZi5maW5pc2hEcmF3ID0gZnVuY3Rpb24ocGl4ZWxEYXRhKSB7CglzZWxmLnBvc3RNZXNzYWdlKHsgdHlwZTogJ2ZpbmlzaCcsIGJhY2tpbmc6IHBpeGVsRGF0YSwgZnJhbWU6IGN1cnJlbnRGcmFtZSB9KTsKfQoKZnVuY3Rpb24gcmVjZWl2ZURpcnR5KGRpcnR5KSB7Cglmb3IgKHZhciB0eXBlIGluIGRpcnR5KSB7CgkJc3dpdGNoICh0eXBlKSB7CgkJY2FzZSAnRElTUENOVCc6CgkJCXZpZGVvLndyaXRlRGlzcGxheUNvbnRyb2woZGlydHlbdHlwZV0pOwoJCQlicmVhazsKCQljYXNlICdCR0NOVCc6CgkJCWZvciAodmFyIGkgaW4gZGlydHlbdHlwZV0pIHsKCQkJCWlmICh0eXBlb2YoZGlydHlbdHlwZV1baV0pID09PSAnbnVtYmVyJykgewoJCQkJCXZpZGVvLndyaXRlQmFja2dyb3VuZENvbnRyb2woaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHSE9GUyc6CgkJCWZvciAodmFyIGkgaW4gZGlydHlbdHlwZV0pIHsKCQkJCWlmICh0eXBlb2YoZGlydHlbdHlwZV1baV0pID09PSAnbnVtYmVyJykgewoJCQkJCXZpZGVvLndyaXRlQmFja2dyb3VuZEhPZmZzZXQoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHVk9GUyc6CgkJCWZvciAodmFyIGkgaW4gZGlydHlbdHlwZV0pIHsKCQkJCWlmICh0eXBlb2YoZGlydHlbdHlwZV1baV0pID09PSAnbnVtYmVyJykgewoJCQkJCXZpZGVvLndyaXRlQmFja2dyb3VuZFZPZmZzZXQoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHWCc6CgkJCWZvciAodmFyIGkgaW4gZGlydHlbdHlwZV0pIHsKCQkJCWlmICh0eXBlb2YoZGlydHlbdHlwZV1baV0pID09PSAnbnVtYmVyJykgewoJCQkJCXZpZGVvLndyaXRlQmFja2dyb3VuZFJlZlgoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHWSc6CgkJCWZvciAodmFyIGkgaW4gZGlydHlbdHlwZV0pIHsKCQkJCWlmICh0eXBlb2YoZGlydHlbdHlwZV1baV0pID09PSAnbnVtYmVyJykgewoJCQkJCXZpZGVvLndyaXRlQmFja2dyb3VuZFJlZlkoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHUEEnOgoJCQlmb3IgKHZhciBpIGluIGRpcnR5W3R5cGVdKSB7CgkJCQlpZiAodHlwZW9mKGRpcnR5W3R5cGVdW2ldKSA9PT0gJ251bWJlcicpIHsKCQkJCQl2aWRlby53cml0ZUJhY2tncm91bmRQYXJhbUEoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHUEInOgoJCQlmb3IgKHZhciBpIGluIGRpcnR5W3R5cGVdKSB7CgkJCQlpZiAodHlwZW9mKGRpcnR5W3R5cGVdW2ldKSA9PT0gJ251bWJlcicpIHsKCQkJCQl2aWRlby53cml0ZUJhY2tncm91bmRQYXJhbUIoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHUEMnOgoJCQlmb3IgKHZhciBpIGluIGRpcnR5W3R5cGVdKSB7CgkJCQlpZiAodHlwZW9mKGRpcnR5W3R5cGVdW2ldKSA9PT0gJ251bWJlcicpIHsKCQkJCQl2aWRlby53cml0ZUJhY2tncm91bmRQYXJhbUMoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ0JHUEQnOgoJCQlmb3IgKHZhciBpIGluIGRpcnR5W3R5cGVdKSB7CgkJCQlpZiAodHlwZW9mKGRpcnR5W3R5cGVdW2ldKSA9PT0gJ251bWJlcicpIHsKCQkJCQl2aWRlby53cml0ZUJhY2tncm91bmRQYXJhbUQoaSwgZGlydHlbdHlwZV1baV0pOwoJCQkJfQoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTjBIJzoKCQkJdmlkZW8ud3JpdGVXaW4wSChkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTjFIJzoKCQkJdmlkZW8ud3JpdGVXaW4xSChkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTjBWJzoKCQkJdmlkZW8ud3JpdGVXaW4wVihkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTjFWJzoKCQkJdmlkZW8ud3JpdGVXaW4xVihkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTklOJzoKCQkJdmlkZW8ud3JpdGVXaW5JbihkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ1dJTk9VVCc6CgkJCXZpZGVvLndyaXRlV2luT3V0KGRpcnR5W3R5cGVdKTsKCQkJYnJlYWs7CgkJY2FzZSAnQkxEQ05UJzoKCQkJdmlkZW8ud3JpdGVCbGVuZENvbnRyb2woZGlydHlbdHlwZV0pOwoJCQlicmVhazsKCQljYXNlICdCTERBTFBIQSc6CgkJCXZpZGVvLndyaXRlQmxlbmRBbHBoYShkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ0JMRFknOgoJCQl2aWRlby53cml0ZUJsZW5kWShkaXJ0eVt0eXBlXSk7CgkJCWJyZWFrOwoJCWNhc2UgJ01PU0FJQyc6CgkJCXZpZGVvLndyaXRlTW9zYWljKGRpcnR5W3R5cGVdKTsKCQkJYnJlYWs7CgkJY2FzZSAnbWVtb3J5JzoKCQkJcmVjZWl2ZU1lbW9yeShkaXJ0eS5tZW1vcnkpOwoJCQlicmVhazsKCQl9Cgl9Cn0KCmZ1bmN0aW9uIHJlY2VpdmVNZW1vcnkobWVtb3J5KSB7CglpZiAobWVtb3J5LnBhbGV0dGUpIHsKCQl2aWRlby5wYWxldHRlLm92ZXJ3cml0ZShuZXcgVWludDE2QXJyYXkobWVtb3J5LnBhbGV0dGUpKTsKCX0KCWlmIChtZW1vcnkub2FtKSB7CgkJdmlkZW8ub2FtLm92ZXJ3cml0ZShuZXcgVWludDE2QXJyYXkobWVtb3J5Lm9hbSkpOwoJfQoJaWYgKG1lbW9yeS52cmFtKSB7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCAxMjsgKytpKSB7CgkJCWlmIChtZW1vcnkudnJhbVtpXSkgewoJCQkJdmlkZW8udnJhbS5pbnNlcnQoaSA8PCAxMiwgbmV3IFVpbnQxNkFycmF5KG1lbW9yeS52cmFtW2ldKSk7CgkJCX0KCQl9Cgl9Cn0KCnZhciBoYW5kbGVycyA9IHsKCWNsZWFyOiBmdW5jdGlvbihkYXRhKSB7CgkJdmlkZW8uY2xlYXIoZGF0YSk7Cgl9LAoKCXNjYW5saW5lOiBmdW5jdGlvbihkYXRhKSB7CgkJcmVjZWl2ZURpcnR5KGRhdGEuZGlydHkpOwoJCXZpZGVvLmRyYXdTY2FubGluZShkYXRhLnksIHByb3h5QmFja2luZyk7Cgl9LAoKCXN0YXJ0OiBmdW5jdGlvbihkYXRhKSB7CgkJcHJveHlCYWNraW5nID0gZGF0YS5iYWNraW5nOwoJCXZpZGVvLnNldEJhY2tpbmcoZGF0YS5iYWNraW5nKTsKCX0sCgoJZmluaXNoOiBmdW5jdGlvbihkYXRhKSB7CgkJY3VycmVudEZyYW1lID0gZGF0YS5mcmFtZTsKCQl2YXIgc2NhbmxpbmUgPSAwOwoJCWZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5zY2FubGluZXMubGVuZ3RoOyArK2kpIHsKCQkJZm9yICh2YXIgeSA9IHNjYW5saW5lOyB5IDwgZGF0YS5zY2FubGluZXNbaV0ueTsgKyt5KSB7CgkJCQl2aWRlby5kcmF3U2NhbmxpbmUoeSwgcHJveHlCYWNraW5nKTsKCQkJfQoJCQlzY2FubGluZSA9IGRhdGEuc2NhbmxpbmVzW2ldLnkgKyAxOwoJCQlyZWNlaXZlRGlydHkoZGF0YS5zY2FubGluZXNbaV0uZGlydHkpOwoJCQl2aWRlby5kcmF3U2NhbmxpbmUoZGF0YS5zY2FubGluZXNbaV0ueSwgcHJveHlCYWNraW5nKTsKCQl9CgkJZm9yICh2YXIgeSA9IHNjYW5saW5lOyB5IDwgMTYwOyArK3kpIHsKCQkJdmlkZW8uZHJhd1NjYW5saW5lKHksIHByb3h5QmFja2luZyk7CgkJfQoJCXZpZGVvLmZpbmlzaERyYXcoc2VsZik7Cgl9LAp9OwoKc2VsZi5vbm1lc3NhZ2UgPSBmdW5jdGlvbihtZXNzYWdlKSB7CgloYW5kbGVyc1ttZXNzYWdlLmRhdGFbJ3R5cGUnXV0obWVzc2FnZS5kYXRhKTsKfTsK";

const GBA_res_crash_png = "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";

const GBA_res_main_css = "Ym9keSB7Cgl0ZXh0LWFsaWduOiBjZW50ZXI7CgltYXJnaW46IDAgMCAxNXB4OwoJY29sb3I6IHdoaXRlOwoJZm9udC1mYW1pbHk6ICdDYWxpYnJpJywgJ1ZlcmRhbmEnLCBzYW5zLXNlcmlmOwoJZm9udC1zaXplOiAxNXB4OwoJdGV4dC1zaGFkb3c6IDAgMnB4IHJnYmEoMCwgMCwgMCwgMC42KTsKCWJhY2tncm91bmQ6bm9uZSB0cmFuc3BhcmVudDsKfQoKYnV0dG9uIHsKCWZvbnQtZmFtaWx5OiAnQ2FsaWJyaScsICdWZXJkYW5hJywgc2Fucy1zZXJpZjsKfQoKI3NjcmVlbiB7CgliYWNrZ3JvdW5kOmJsYWNrOwoJcGFkZGluZzogMDsKICAgIG1hcmdpbjogYXV0bzsKICAgIGRpc3BsYXk6IGJsb2NrOyAgICAKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIGJvdHRvbTogMDsKICAgIGxlZnQ6IDA7CiAgICByaWdodDogMDsgCn0KCiNzY3JlZW5bd2lkdGg9IjI0MCJdIHsKCW1hcmdpbi10b3A6IDQyLjVweDsKCW1hcmdpbi1ib3R0b206IC0zNjNweDsgLyogVGFrZSB1cCBubyBoZWlnaHQgKi8KCWltYWdlLXJlbmRlcmluZzogLXdlYmtpdC1vcHRpbWl6ZS1jb250cmFzdDsKCWltYWdlLXJlbmRlcmluZzogLW1vei1jcmlzcC1lZGdlczsKCWltYWdlLXJlbmRlcmluZzogLW8tY3Jpc3AtZWRnZXM7Cgl6b29tOiAyOwoJLW8tdHJhbnNmb3JtOiBzY2FsZSgyKTsKfQoKI2NvbnRyb2xzOjpiZWZvcmUgewoJY29udGVudDogIiI7CglkaXNwbGF5OiBibG9jazsKCWhlaWdodDogMzBweDsKCXdpZHRoOiA2NDdweDsKCWJvcmRlci1yYWRpdXM6IDVweCAvIDE1cHg7Cglib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7Cglib3JkZXItd2lkdGg6IDAgMXB4OwoJbWFyZ2luOiAwIC01cHggMjBweDsKCWJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgIzg3NjlBMCwgIzk1NzhCOSAxNSUsICM2QTQ4ODMgNTAlLCAjNDMzMDYxKTsKCWJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIzg3NjlBMCwgIzk1NzhCOSAxNSUsICM2QTQ4ODMgNTAlLCAjNDMzMDYxKTsKCWJveC1zaGFkb3c6IDAgNXB4IDRweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC42KTsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKI2NvbnRyb2xzIHsKCWJvcmRlci1yYWRpdXM6IDIwcHg7Cglib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNCk7Cglib3JkZXItdG9wOiBub25lOwoJYm94LXNoYWRvdzogMCA0cHggNHB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjkpLCAwIC00MHB4IDJweCAtMXB4ICM0MzMwNjEgaW5zZXQ7Cgl3aWR0aDogNjQwcHg7CgltYXJnaW46IGF1dG87CgloZWlnaHQ6IDIwMHB4OwoJb3ZlcmZsb3c6IGhpZGRlbjsKCWJhY2tncm91bmQtY29sb3I6ICM3NjU0OTA7Cn0KCiNjb250cm9scyA+IGRpdiB7CgltYXJnaW4tdG9wOiAzMHB4OwoJLW1vei10cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMDsKCS1tb3otdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpOwoJLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSBsaW5lYXIgMC41czsKCS13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbi15OiAycHg7Cgktd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTsKCS13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gbGluZWFyIDAuNXM7Cn0KCiNjcmFzaCB7CgltYXJnaW4tdG9wOiAxMDBweDsKCW1hcmdpbi1ib3R0b206IDE5OXB4Owp9CgpidXR0b24gewoJYmFja2dyb3VuZC1jb2xvcjogIzZBNDg4MzsKCWZvbnQtd2VpZ2h0OiBib2xkOwoJZm9udC1zaXplOiAxOHB4OwoJY29sb3I6IHdoaXRlOwoJdGV4dC1zaGFkb3c6IDAgM3B4ICM0MzMwNjE7CglwYWRkaW5nOiAycHggMTBweCA1cHg7Cglib3JkZXItcmFkaXVzOiAwIDAgMTBweCAxMHB4OwoJYm9yZGVyOiAwIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC40KTsKCWJvcmRlci13aWR0aDogM3B4IDFweCAwcHg7CglkaXNwbGF5OiBpbmxpbmU7Cglib3gtc2hhZG93OiAwIDJweCA2cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMikgaW5zZXQ7CgltYXJnaW46IDAgMCAyMHB4Owp9CgpsYWJlbCwgI3NvdW5kLCAjY29udHJvbHMgPiBkaXYgPiBwIHsKCWRpc3BsYXk6IGJsb2NrOwoJbWFyZ2luOiA1cHggMzBweDsKCWhlaWdodDogMThweDsKfQoKbGFiZWwsICNzb3VuZCB7CglmbG9hdDogbGVmdDsKCWNsZWFyOiBsZWZ0Owp9Cgojc291bmQgKyBwIHsKCW1hcmdpbi10b3A6IC0yM3B4ICFpbXBvcnRhbnQ7Cn0KCiNjb250cm9scyA+IGRpdiA+IHAgewoJZmxvYXQ6IHJpZ2h0OwoJY2xlYXI6IHJpZ2h0Owp9CgppbnB1dFt0eXBlPWNoZWNrYm94XSB7CgltYXJnaW46IC0zcHggNXB4IDAgMDsKfQoKaW5wdXRbdHlwZT1jaGVja2JveF06OmFmdGVyIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCWNvbnRlbnQ6ICIiOwoJYmFja2dyb3VuZC1jb2xvcjogIzc2NTQ5MDsKCWJvcmRlcjogMCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMyk7Cglib3JkZXItd2lkdGg6IDFweCAxcHggMnB4OwoJd2lkdGg6IDEycHg7CgloZWlnaHQ6IDEycHg7Cglib3JkZXItcmFkaXVzOiAzcHg7Cglwb3NpdGlvbjogcmVsYXRpdmU7Cgl0b3A6IC0zcHg7Cgl2aXNpYmlsaXR5OiB2aXNpYmxlOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkOjphZnRlciB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjNkE0ODgzOwoJYm9yZGVyLXdpZHRoOiAycHggMXB4IDFweDsKCWJveC1zaGFkb3c6IDAgMnB4IDZweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSBpbnNldDsKfQoKcDpmaXJzdC1jaGlsZCB7CgltYXJnaW4tdG9wOiAwOwp9CgphOmxpbmssIGE6dmlzaXRlZCB7Cgljb2xvcjogI2ZjYjNmMDsKfQoKLmhpZGRlbiB7CgktbW96LXRyYW5zZm9ybTogcm90YXRlWCg5MGRlZykgIWltcG9ydGFudDsKCS13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDkwZGVnKSAhaW1wb3J0YW50Owp9CgouZGVhZCB7CglkaXNwbGF5OiBub25lOwp9CgppbnB1dFt0eXBlPWZpbGVdIHsKCW9wYWNpdHk6IDAgIWltcG9ydGFudDsKCXdpZHRoOiAwOwoJaGVpZ2h0OiAwOwoJbWFyZ2luOiAwOwoJcGFkZGluZzogMDsKCWJvcmRlcjogbm9uZTsKfQoKaW5wdXRbdHlwZT1yYW5nZV0gewoJd2lkdGg6IDEwMHB4OwoJaGVpZ2h0OiAxNHB4OwoJbWFyZ2luOiAycHg7Cn0KCmZvb3RlciB7Cglmb250LXNpemU6IDEycHg7CglwYWRkaW5nLXRvcDogOHB4Owp9CgpwIHsKCW1hcmdpbjogMDsKfQoKbGFiZWwgcCwgI3NvdW5kIHAgewoJZGlzcGxheTogaW5saW5lOwp9Cgp1bCNsaW5rcyB7CglkaXNwbGF5OiBibG9jazsKCXRleHQtYWxpZ246IGNlbnRlcjsKCXBhZGRpbmc6IDA7Cn0KCnVsI2xpbmtzIGxpIHsKCWRpc3BsYXk6IGlubGluZTsKCWxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKfQoKdWwjbGlua3MgbGk6bm90KDpmaXJzdC1jaGlsZCk6OmJlZm9yZSB7Cgljb250ZW50OiAi4oCiIjsKCW1hcmdpbjogMCAwLjVlbTsKfQo=";

const GBA_res_xhr_js = "ZnVuY3Rpb24gbG9hZFJvbSh1cmwsIGNhbGxiYWNrKSB7Cgl2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7Cgl4aHIub3BlbignR0VUJywgdXJsKTsKCXhoci5yZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInOwoKCXhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHsgY2FsbGJhY2soeGhyLnJlc3BvbnNlKSB9OwoJeGhyLnNlbmQoKTsKfQo=";

const GBA_COPYING = "Q29weXJpZ2h0IChjKSAyMDEyLCBKZWZmcmV5IFBmYXUKQWxsIHJpZ2h0cyByZXNlcnZlZC4KClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAptb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCiogUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzCiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCgoqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uCiAgYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCgpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyIKQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRQpJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRQpBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFCkxJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IKQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YKU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTCklOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOCkNPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpCkFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFClBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgo=";

const GBA_index_html = "";

function create_zip_GBA(filename, content) {
	var zip = new JSZip();
	zip.file("resources/crash.png",atob(GBA_res_crash_png));
	zip.file("resources/main.css",atob(GBA_res_main_css));
	zip.file("resources/xhr.js",atob(GBA_res_xhr_js));
	zip.file("js/video/proxy.js",atob(GBA_js_video_proxy_js));
	zip.file("js/video/software.js",atob(GBA_js_video_software_js));
	zip.file("js/video/worker.js",atob(GBA_js_video_worker_js));
	zip.file("js/arm.js",atob(GBA_js_arm_js));
	zip.file("js/audio.js",atob(GBA_js_audio_js));
	zip.file("js/core.js",atob(GBA_js_core_js));
	zip.file("js/gba.js",atob(GBA_js_gba_js));
	zip.file("js/gpio.js",atob(GBA_js_gpio_js));
	zip.file("js/io.js",atob(GBA_js_io_js));
	zip.file("js/irq.js",atob(GBA_js_irq_js));
	zip.file("js/keypad.js",atob(GBA_js_keypad_js));
	zip.file("js/mmu.js",atob(GBA_js_mmu_js));
	zip.file("js/savedata.js",atob(GBA_js_savedata_js));
	zip.file("js/sio.js",atob(GBA_js_sio_js));
	zip.file("js/thumb.js",atob(GBA_js_thumb_js));
	zip.file("js/util.js",atob(GBA_js_util_js));
	zip.file("js/video.js",atob(GBA_js_video_js));
	zip.file("COPYING",atob(GBA_COPYING));
	
	var index_html = atob(GBA_index_html);
	index_html = index_html.replace("@(rom_b64)", btoa(content));
	//console.log(mobile_js);
	zip.file("index.html",index_html);
    
    zip.generateAsync({
        type: "base64"
    }).then(function(content) {
		var link = document.createElement('a');
		if (typeof link.download === 'string') {
			document.body.appendChild(link); // Firefox requires the link to be in the body
			link.download = filename+".zip";
			link.href = "data:application/zip;base64," + content;
			link.click();
			document.body.removeChild(link); // remove the link when done
		} else {
			location.replace("data:application/zip;base64," + content);
		}        
    });     
}